swagger: '3.0'

info:
  title: Pure1 Public REST API
  version: '1.latest'
  x-logo:
    url:
      $ref: ../redoc/PS-LogoBase64-P1.txt
    backgroundColor: '#fff'
    altText: Pure Storage logo
  description: "Pure1 Public REST API, developed by [Pure Storage, Inc.](https://www.purestorage.com)\n
    \nThe Pure1 REST API 1.latest offers one single form of authentication: OAuth 2.0 via
    the [Token Exchange protocol](https://datatracker.ietf.org/doc/draft-ietf-oauth-token-exchange).\n
    \nOAuth 2.0 is an open protocol to allow secure authorization in a simple and
    standard method from web, mobile, desktop and background applications.\n\nNote
    that the [Authentication](#section/Authentication) section below mentions 'API
    Key' as the security scheme type. This is solely for the purpose of allowing testing
    this API with [Swagger UI](https://static.pure1.purestorage.com/api-swagger/index.html).\n
    \n[Knowledge base reference documentation](https://support.purestorage.com/Pure1/Pure1_Manage/Pure1_Manage_-_REST_API/Pure1_Manage_-_REST_API__Reference)"
host: api.pure1.purestorage.com
schemes:
- https

consumes:
- application/json

produces:
- application/json

securityDefinitions:
  AuthorizationHeader:
    type: apiKey
    in: header
    name: Authorization

security:
- AuthorizationHeader: []

tags:
- name: Authorization
  description: >-
    Handles authorization access to other API endpoints through OAuth 2.0 Token Exchange.
- name: Alerts
  description: >-
    Provides access to capacity, health, and hardware related array alerts.
- name: Arrays
  description: >-
    Provides information about FlashArray and FlashBlade appliances.
- name: Audits
  description: >-
    Provides access to CLI audit logs from FlashArray and FlashBlade appliances.
- name: Blades
  description: >-
    Provides information about FlashBlade blades.
- name: Buckets
  description: >-
    Provides information about FlashBlade buckets.
- name: Bucket Replica Links
  description: >-
    Provides information about replica links between buckets.
- name: Controllers
  description: >-
    Provides information about FlashArray controllers.
- name: Directories
  description: >-
    Provides information about FlashArray directories.
- name: Drives
  description: >-
    Provides information about FlashArray drives.
- name: File Systems
  description: >-
    Provides information about FlashArray and FlashBlade file systems.
- name: File System Replica Links
  description: >-
    Provides information about replica links between FlashBlade file systems.
- name: File System Snapshots
  description: >-
    Provides information about FlashBlade file system snapshots.
- name: Hardware
  description: >-
    Provides information about hardware components.
- name: Hardware Connectors
  description: >-
    Provides information about FlashBlade hardware connectors.
- name: Invoices
  description: >-
    Provides information about Pure1 subscription invoices.
- name: Metrics
  description: >-
    Provides information about historical metrics for arrays, volumes,
    file systems and pods.
- name: Network Interfaces
  description: >-
    Provides information about network interfaces available on arrays.
- name: Object Store Accounts
  description: >-
    Provides information about object store accounts.
- name: Pods
  description: >-
    Provides information about FlashArray pods. A pod is the pairing
    of two arrays that replicate some volumes with each other.
- name: Pod Replica Links
  description: >-
    Provides information about replica links between FlashArray pods.
- name: Policies
  description: >-
    Provides information about FlashBlade policies and the members
    they apply to.
- name: Ports
  description: >-
    Provides information about FlashArray ports.
- name: Subscriptions
  description: >-
    Provides information about Pure1 subscription offerings.
- name: Sustainability
  description: >-
    Provides information about energy consumption and sustainability.
- name: Targets
  description: >-
    Provides information about FlashBlade external replication targets.
- name: Volumes
  description: >-
    Provides information about block storage volumes on FlashArray arrays.
- name: Volume Snapshots
  description: >-
    Provides information about snapshots of block storage volumes
    on FlashArray arrays.

paths:
  /oauth2/1.0/token:
    post:
      consumes:
      - application/x-www-form-urlencoded

      summary: Get access token
      description: >
        Exchanges an ID Token for an OAuth 2.0 access token.

      parameters:
      - name: grant_type
        in: formData
        description: >-
          The method by which the access token will be obtained.
          The Pure Storage REST API supports the OAuth 2.0 "token exchange" grant
          type,
          which indicates that a token exchange is being performed.
          Set `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`.
        type: string
        required: true
        default: urn:ietf:params:oauth:grant-type:token-exchange
      - name: subject_token
        in: formData
        type: string
        description: >-
          An encoded security ID Token representing the identity of the party on behalf
          of
          whom the request is being made. The token must be issued by a trusted
          identity provider which must be either a registered application in Pure1
          or an enabled API client on the array. The token must be a JSON Web Token
          and must contain the following claims:

          > | JWT claim | Location | API Client Field | Description | Required By
          |

          > |-|-|-|-|-|

          > | kid | Header | key_id | Key ID of the API client that issues the identity
          token. | FlashArray
          and FlashBlade only. |

          > | aud | Payload | id | Client ID of the API client that issues the identity
          token. | FlashArray
          and FlashBlade only. |

          > | sub | Payload | | Login name of the array user for whom the token should
          be issued.
          This must be a valid user in the system. | FlashArray and FlashBlade only.
          |

          > | iss | Payload | issuer | Application ID for the Pure1 or API client's
          trusted identity
          issuer on the array. | All products. |

          > | iat | Payload | | Timestamp of when the identity token was issued.
          Measured in milliseconds since the UNIX epoch. | All products. |

          > | exp | Payload | | Timestamp of when the identity token will expire.
          Measured in milliseconds since the UNIX epoch. | All products. |


          Each token must also be signed with the private key that is paired with
          the
          API client's public key.
        required: true
      - name: subject_token_type
        in: formData
        description: >-
          An identifier that indicates the type of security token specifed in the
          `subject_token` parameter.
          The Pure Storage REST API supports the JSON Web Token (JWT)
          as the means for requesting the access token.
          Set `subject_token_type` to `urn:ietf:params:oauth:token-type:jwt`.
        type: string
        required: true
        default: urn:ietf:params:oauth:token-type:jwt
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      responses:
        200:
          description: OK
          type: object
          schema:
            type: object
            title: oauth_token_response
            properties:
              access_token:
                description: >-
                  The serialized OAuth 2.0 Bearer token used to perform authenticated
                  requests.
                  The access token must be added to the Authorization header of all
                  API calls.
                type: string
                example: 
                  eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4
              issued_token_type:
                description: >-
                  The type of token that is issued.
                  The Pure Storage REST API supports OAuth 2.0 access tokens.
                type: string
                example: urn:ietf:params:oauth:token-type:access_token
              token_type:
                description: >-
                  Indicates how the API client can use the access token issued.
                  The Pure Storage REST API supports the `Bearer` token.
                type: string
                example: Bearer
              expires_in:
                description: >-
                  The duration after which the access token will expire.
                  Measured in seconds. This differs from other duration
                  fields that are expressed in milliseconds.
                type: integer
                format: uint32
                example: 35999
        400:
          description: BAD REQUEST
          type: object
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_request
              error_description:
                type: string
                example: 'Unsupported subject_token_type: urn:ietf:params:oauth:token-'
        401:
          description: UNAUTHORIZED
          type: object
          schema:
            type: object
            properties:
              error:
                type: string
                example: invalid_client
              error_description:
                type: string
                example: 'Invalid identity: JWT validation failed.'
      security: []

      tags:
      - Authorization
  /api/1.latest/alerts:
    get:
      summary: Get alerts
      description: >
        Retrieves information about alerts generated by Pure1-monitored appliances.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Alert'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Alerts
  /api/1.latest/arrays:
    get:
      summary: Get arrays
      description: >
        Retrieves information about FlashArray and FlashBlade storage appliances.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: fqdns
        in: query
        description: >-
          A comma-separated list of resource FQDNs.
          If there is not at least one resource that matches each `fqdn` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Array'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Arrays
  /api/1.latest/arrays/support-contracts:
    get:
      summary: Get array support contracts
      description: >
        Retrieves the support contracts associated with arrays.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: resource_ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `resource_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_fqdns
        in: query
        description: >-
          A comma-separated list of resource FQDNs.
          If there is not at least one resource that matches each `resource_fqdn`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `resource_name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/SupportContract'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Arrays
  /api/1.latest/arrays/tags:
    get:
      summary: Get array tags
      description: >
        Retrieves the tags associated with specified arrays.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: keys
        in: query
        description: >-
          A comma-separated list of tag keys.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: namespaces
        in: query
        description: >-
          A comma-separated list of namespaces.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: resource_ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `resource_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `resource_name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Tag'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Arrays

    delete:
      summary: Delete array tags
      description: >
        Deletes array tags from Pure1.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: keys
        in: query
        description: >-
          A comma-separated list of tag keys.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: namespaces
        in: query
        description: >-
          A comma-separated list of namespaces.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_ids
        in: query
        description: >-
          REQUIRED: either `resource_ids` or `resource_names`.
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `resource_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_names
        in: query
        description: >-
          REQUIRED: either `resource_ids` or `resource_names`.
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `resource_name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Arrays
  /api/1.latest/arrays/tags/batch:
    put:
      summary: >
        Create or update array tags
      description: >
        Creates or updates array tags contextual to Pure1 only.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: namespaces
        in: query
        description: >-
          A comma-separated list of namespaces.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_ids
        in: query
        description: >-
          REQUIRED: either `resource_ids` or `resource_names`.
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `resource_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_names
        in: query
        description: >-
          REQUIRED: either `resource_ids` or `resource_names`.
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `resource_name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: tag
        in: body
        description: >-
          A list of tags to be upserted.
        required: true
        schema:
          type: array
          items:
            type: object
            properties:
              key:
                description: Key of the tag.
                type: string
                example: example_key
              value:
                description: Value of the tag.
                type: string
                example: value123
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/Tag'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Arrays
  /api/1.latest/assessment/sustainability/arrays:
    get:
      summary: Get appliance sustainability information.
      description: >-
        Retrieves information about FlashArray and FlashBlade size,
        power consumption, heat generation and its sustainability assessment.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: fqdns
        in: query
        description: >-
          A comma-separated list of resource FQDNs.
          If there is not at least one resource that matches each `fqdn` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/SustainabilityArray'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Sustainability
  /api/1.latest/assessment/sustainability/insights/arrays:
    get:
      summary: Get appliance sustainability insights information.
      description: >-
        Retrieves information about FlashArray and FlashBlade insights
        connected to sustainability assessment.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/SustainabilityInsightArray'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Sustainability
  /api/1.latest/audits:
    get:
      summary: Get audits
      description: >
        Retrieves audit objects.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Audit'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Audits
  /api/1.latest/blades:
    get:
      summary: Get blades
      description: >-
        Retrieves information about FlashBlade blades.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Blade'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Blades
  /api/1.latest/buckets:
    get:
      summary: Get buckets
      description: >
        Retrieves buckets.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Bucket'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Buckets
  /api/1.latest/bucket-replica-links:
    get:
      summary: Get bucket replica links
      description: >
        Retrieves information about bucket replica links.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A list of member IDs. Member IDs separated by a `+` indicate that both
          members must be present in each element. Member IDs separated by a `,`
          indicate that at least one member must be present in each element.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of member IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A list of member names. Member names separated by a `+` indicate that both
          members must be present in each element. Member names separated by a `,`
          indicate that at least one member must be present in each element.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of member names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: source_ids
        in: query
        description: >-
          A list of source IDs. Source IDs separated by a `+` indicate that both
          sources must be present in each element. Source IDs separated by a `,`
          indicate that at least one source must be present in each element.
          If there is not at least one resource that matches each `source_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of source IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: source_names
        in: query
        description: >-
          A list of source names. Source names separated by a `+` indicate that both
          sources must be present in each element. Source names separated by a `,`
          indicate that at least one source must be present in each element.
          If there is not at least one resource that matches each `source_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of source names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: target_ids
        in: query
        description: >-
          A list of target IDs. Target IDs separated by a `+` indicate that both
          targets must be present in each element. Target IDs separated by a `,`
          indicate that at least one target must be present in each element.
          If there is not at least one resource that matches each `target_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of target IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: target_names
        in: query
        description: >-
          A list of target names. Target names separated by a `+` indicate that both
          targets must be present in each element. Target names separated by a `,`
          indicate that at least one target must be present in each element.
          If there is not at least one resource that matches each `target_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of target names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/BucketReplicaLink'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Bucket Replica Links
  /api/1.latest/controllers:
    get:
      summary: Get controllers
      description: >
        Retrieves information about controllers.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Controller'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Controllers
  /api/1.latest/directories:
    get:
      summary: Get managed directories
      description: >-
        Retrieves information about FlashArray managed directory objects.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: file_system_ids
        in: query
        description: >-
          Performs the operation on the file system ID specified.
          Enter multiple file system IDs in comma-separated format.
          The `file_system_ids` and `file_system_names` parameters cannot be provided
          together.
          Single quotes are required around all strings.
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: file_system_names
        in: query
        description: >-
          Performs the operation on the file system name specified.
          Enter multiple file system names in comma-separated format.
          For example, `filesystem1,filesystem2`.
          The `file_system_ids` and `file_system_names` parameters cannot be provided
          together.
          Single quotes are required around all strings.
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Directory'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Directories
  /api/1.latest/drives:
    get:
      summary: Get drives
      description: >-
        Retrieves information about FlashArray drives.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Drive'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Drives
  /api/1.latest/file-systems:
    get:
      summary: Get FlashArray and FlashBlade file systems
      description: >
        Retrieves information about FlashArray and FlashBlade file system objects.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/FileSystem'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - File Systems
  /api/1.latest/file-systems/policies:
    get:
      summary: Get FlashBlade file system / policy pairs
      description: >
        Retrieves pairs of FlashBlade file system members and their policies.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - File Systems
  /api/1.latest/file-system-replica-links:
    get:
      summary: Get FlashBlade file system replica links
      description: >
        Retrieves information about FlashBlade file system replica links.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A list of member IDs. Member IDs separated by a `+` indicate that both
          members must be present in each element. Member IDs separated by a `,`
          indicate that at least one member must be present in each element.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of member IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A list of member names. Member names separated by a `+` indicate that both
          members must be present in each element. Member names separated by a `,`
          indicate that at least one member must be present in each element.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of member names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: source_ids
        in: query
        description: >-
          A list of source IDs. Source IDs separated by a `+` indicate that both
          sources must be present in each element. Source IDs separated by a `,`
          indicate that at least one source must be present in each element.
          If there is not at least one resource that matches each `source_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of source IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: source_names
        in: query
        description: >-
          A list of source names. Source names separated by a `+` indicate that both
          sources must be present in each element. Source names separated by a `,`
          indicate that at least one source must be present in each element.
          If there is not at least one resource that matches each `source_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of source names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: target_ids
        in: query
        description: >-
          A list of target IDs. Target IDs separated by a `+` indicate that both
          targets must be present in each element. Target IDs separated by a `,`
          indicate that at least one target must be present in each element.
          If there is not at least one resource that matches each `target_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of target IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: target_names
        in: query
        description: >-
          A list of target names. Target names separated by a `+` indicate that both
          targets must be present in each element. Target names separated by a `,`
          indicate that at least one target must be present in each element.
          If there is not at least one resource that matches each `target_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of target names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/FileSystemReplicaLink'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - File System Replica Links
  /api/1.latest/file-system-replica-links/policies:
    get:
      summary: Get FlashBlade file system replica link / policy pairs
      description: >
        Retrieves pairs of FlashBlade file system replica link members and their policies.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - File System Replica Links
  /api/1.latest/file-system-snapshots:
    get:
      summary: Get FlashBlade file system snapshots
      description: >
        Retrieves snapshots of FlashBlade file systems.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: source_ids
        in: query
        description: >-
          A comma-separated list of ids for the source of the object.
          If there is not at least one resource that matches each `source_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: source_names
        in: query
        description: >-
          A comma-separated list of names for the source of the object.
          If there is not at least one resource that matches each `source_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/FileSystemSnapshot'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - File System Snapshots
  /api/1.latest/file-system-snapshots/policies:
    get:
      summary: Get FlashBlade file system snapshot / policy pairs
      description: >
        Retrieves pairs of FlashBlade file system snapshot members and their policies.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - File System Snapshots
  /api/1.latest/hardware:
    get:
      summary: Get hardware
      description: >
        Retrieves information about hardware components.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Hardware'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Hardware
  /api/1.latest/hardware-connectors:
    get:
      summary: Get hardware connectors
      description: >-
        Retrieves information about FlashBlade hardware connectors.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/HardwareConnector'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Hardware Connectors
  /api/1.latest/invoices:
    get:
      summary: Get invoices
      description: >-
        Retrieves information about Pure1 subscription invoices.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: partner_purchase_orders
        in: query
        description: >-
          A comma-separated list of partner purchase order numbers.
          If there is not at least one resource that matches each `partner_purchase_order`
          element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: subscription_ids
        in: query
        description: >-
          A comma-separated list of subscription IDs.
          If there is not at least one resource that matches each `subscription.id`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: subscription_names
        in: query
        description: >-
          A comma-separated list of subscription names.
          If there is not at least one resource that matches each `subscription.name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Invoice'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Invoices
  /api/1.latest/metrics:
    get:
      summary: Get metrics
      description: >
        Retrieves information about metrics that can be queried for.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: resource_types
        in: query
        description: >-
          The resource types to list the available metrics.
          Valid values are `arrays`, `volumes`, and `pods`.
          A metric can belong to a combination of resources,
          e.g., write-iops from array to pod. In that case, query by
          ['arrays', 'pods'].
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Metric'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Metrics
  /api/1.latest/metrics/history:
    get:
      summary: Get metrics history
      description: >
        Retrieves historical metric data for resources.
        This endpoint supports batching: Up to 32 time series can be retrieved in
        one call.
        It can be multiple metrics for one resource,
        (e.g., load and bandwidth for one array - 2 time series),
        one metric for multiple resource (e.g., load for arrayA and arrayB - 2 time
        series),
        or a combination of both, multiple metrics for multiple resources,
        (e.g., load and bandwidth for arrayA and arrayB - 4 time series).
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: aggregation
        in: query
        description: >-
          Aggregation needed on the metric data.
          Valid values are `avg` and `max`.
          Single quotes are required around all strings.
          Latency metrics averages are weighted by the IOPS.
        x-quoted: true
        type: string
        required: true
      - name: end_time
        in: query
        description: >-
          Timestamp of when the time window ends. Measured in milliseconds since the
          UNIX epoch.
        type: integer
        format: int64
        required: true
      - name: ids
        in: query
        description: >-
          REQUIRED: either `ids` or `names`.
          A comma-separated list of object IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
# NOTE: it is not possible to specify that between two parameters, only one
#       or the other is required
      - name: names
        in: query
        description: >-
          REQUIRED: either `names` or `ids`.
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
# NOTE: it is not possible to specify that between two parameters, only one
#       or the other is required
      - name: resolution
        in: query
        description: >-
          The duration of time between individual data points, in milliseconds.
        type: integer
        format: int64
        required: true
      - name: resource_ids
        in: query
        description: >-
          REQUIRED: either `resource_ids` or `resource_names`.
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `resource_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: resource_names
        in: query
        description: >-
          REQUIRED: either `resource_ids` or `resource_names`.
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `resource_name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: start_time
        in: query
        description: >-
          Timestamp of when the time window starts. Measured in milliseconds since
          the UNIX epoch.
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/MetricHistory'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Metrics
  /api/1.latest/network-interfaces:
    get:
      summary: Get network interfaces
      description: >
        Retrieves information about physical and virtual network interface objects.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/NetworkInterface'
                  description: A list of network interface objects.
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Network Interfaces
  /api/1.latest/object-store-accounts:
    get:
      summary: Get object store accounts
      description: >
        Retrieves object store accounts.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    allOf:
                    - allOf:
                      - description: >-
                          An ordinary (as opposed to built-in) resource that exists
                          on one or
                          multiple arrays and can be created, named, renamed or deleted
                          by the
                          user. This might be a virtual resource (e.g., a volume),
                          or correspond
                          to something in the environment, like a host or a server.
                        allOf:
                        - description: >-
                            An ordinary (as opposed to built-in) resource that can
                            be created, named,
                            renamed, or deleted by the user. This might be a virtual
                            resource (e.g.,
                            a volume), or correspond to something in the physical
                            environment, like a
                            host or a server.
                          allOf:
                          - type: object
                            properties:
                              _as_of:
                                description: The freshness of the data (timestamp
                                  in millis since epoch).
                                type: integer
                                readOnly: true
                                format: int64
                                example: 1502729489760
                          - properties:
                              id:
                                description: A non-modifiable, globally unique ID
                                  chosen by the system.
                                type: string
                                readOnly: true
                                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                              name:
                                description: A modifiable, locally unique name chosen
                                  by the user.
                                type: string
                                example: example_name
                        - type: object
                          readOnly: true
                          properties:
                            arrays:
                              description: >-
                                The list of arrays where this resource exists. Many
                                resources are on a single array, but
                                some resources, such as pods, can be shared across
                                multiple arrays.
                              type: array
                              items:
                                type: object
                                readOnly: true
                                properties:
                                  id:
                                    description: The opaque and unique id of this
                                      resource.
                                    type: string
                                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                  name:
                                    description: The name of this resource.
                                    type: string
                                    example: example_name
                                  resource_type:
                                    description: >-
                                      The type of this resource represented by the
                                      name of its REST endpoint.
                                      For example, "arrays", "network-interfaces",
                                      and "metrics".
                                      The value may be `null` if the resource is not
                                      represented.
                                    type: string
                                    example: example_resource_type
                      - properties:
                          created:
                            type: integer
                            readOnly: true
                            format: int64
                            description: Creation timestamp of the object, in milliseconds
                              since Unix epoch.
                            example: 1502729489760
                          object_count:
                            type: integer
                            readOnly: true
                            format: int64
                            description: The number of objects within the account.
                            example: 15
                    - description: >-
                        A built-in resource that exists on one or multiple arrays.
                      allOf:
                      - description: >-
                          An ordinary (as opposed to built-in) resource that can be
                          created, named,
                          renamed, or deleted by the user. This might be a virtual
                          resource (e.g.,
                          a volume), or correspond to something in the physical environment,
                          like a
                          host or a server.
                        allOf:
                        - type: object
                          properties:
                            _as_of:
                              description: The freshness of the data (timestamp in
                                millis since epoch).
                              type: integer
                              readOnly: true
                              format: int64
                              example: 1502729489760
                        - properties:
                            id:
                              description: A non-modifiable, globally unique ID chosen
                                by the system.
                              type: string
                              readOnly: true
                              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                            name:
                              description: A modifiable, locally unique name chosen
                                by the user.
                              type: string
                              example: example_name
                      - type: object
                        readOnly: true
                        properties:
                          arrays:
                            description: >-
                              The list of arrays where this resource exists. Many
                              resources are on a single array, but
                              some resources, such as pods, can be shared across multiple
                              arrays.
                            type: array
                            items:
                              allOf:
                              - type: object
                                readOnly: true
                                properties:
                                  id:
                                    description: The opaque and unique id of this
                                      resource.
                                    type: string
                                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                  name:
                                    description: The name of this resource.
                                    type: string
                                    example: example_name
                                  resource_type:
                                    description: >-
                                      The type of this resource represented by the
                                      name of its REST endpoint.
                                      For example, "arrays", "network-interfaces",
                                      and "metrics".
                                      The value may be `null` if the resource is not
                                      represented.
                                    type: string
                                    example: example_resource_type
                              - properties:
                                  fqdn:
                                    description: >-
                                      The fully qualified domain name of the appliance
                                      when `resource_type` is `arrays`,
                                      `null` otherwise.
                                    readOnly: true
                                    type: string
                                    example: example_name.dc1.example.com
                  description: A list of object store accounts.
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Object Store Accounts
  /api/1.latest/pods:
    get:
      summary: Get pods
      description: >
        Retrieves information about pod objects.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Pod'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Pods
  /api/1.latest/pod-replica-links:
    get:
      summary: Get pod replica links
      description: >
        Retrieves information about pod replica links.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A list of member IDs. Member IDs separated by a `+` indicate that both
          members must be present in each element. Member IDs separated by a `,`
          indicate that at least one member must be present in each element.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of member IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A list of member names. Member names separated by a `+` indicate that both
          members must be present in each element. Member names separated by a `,`
          indicate that at least one member must be present in each element.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of member names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: source_ids
        in: query
        description: >-
          A list of source IDs. Source IDs separated by a `+` indicate that both
          sources must be present in each element. Source IDs separated by a `,`
          indicate that at least one source must be present in each element.
          If there is not at least one resource that matches each `source_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of source IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: source_names
        in: query
        description: >-
          A list of source names. Source names separated by a `+` indicate that both
          sources must be present in each element. Source names separated by a `,`
          indicate that at least one source must be present in each element.
          If there is not at least one resource that matches each `source_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of source names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: target_ids
        in: query
        description: >-
          A list of target IDs. Target IDs separated by a `+` indicate that both
          targets must be present in each element. Target IDs separated by a `,`
          indicate that at least one target must be present in each element.
          If there is not at least one resource that matches each `target_id` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of target IDs separated by a `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: target_names
        in: query
        description: >-
          A list of target names. Target names separated by a `+` indicate that both
          targets must be present in each element. Target names separated by a `,`
          indicate that at least one target must be present in each element.
          If there is not at least one resource that matches each `target_name` element,
          an error is returned.
          Single quotes are required around all strings.
          When using Try it Out in Swagger, a list of target names separated by a
          `+`
          must be entered in the same item cell.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PodReplicaLink'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Pod Replica Links
  /api/1.latest/policies:
    get:
      summary: Get policies
      description: >
        Retrieves policies and their rules.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Policy'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Policies
  /api/1.latest/policies/file-systems:
    get:
      summary: Get policy / FlashBlade file system pairs
      description: >
        Retrieves pairs of policy references and their FlashBlade file system members.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Policies
  /api/1.latest/policies/file-system-replica-links:
    get:
      summary: Get policy / FlashBlade file system replica link pairs
      description: >
        Retrieves pairs of policy references and their FlashBlade file system
        replica link members.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Policies
  /api/1.latest/policies/file-system-snapshots:
    get:
      summary: Get policy / FlashBlade file system snapshot pairs
      description: >
        Retrieves pairs of policy references and their FlashBlade file system
        snapshot members.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Policies
  /api/1.latest/policies/members:
    get:
      summary: Get policy / member pairs
      description: >
        Retrieves pairs of policy references and their members.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: member_ids
        in: query
        description: >-
          A comma-separated list of member IDs.
          If there is not at least one resource that matches each `member_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: member_names
        in: query
        description: >-
          A comma-separated list of member names.
          If there is not at least one resource that matches each `member_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_ids
        in: query
        description: >-
          A comma-separated list of policy IDs.
          If there is not at least one resource that matches each `policy_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: policy_names
        in: query
        description: >-
          A comma-separated list of policy names.
          If there is not at least one resource that matches each `policy_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/PolicyMember'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Policies
  /api/1.latest/ports:
    get:
      summary: Get ports
      description: >-
        Retrieves information about FlashArray ports.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Port'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Ports
  /api/1.latest/subscriptions:
    get:
      summary: Get subscriptions
      description: >-
        Retrieves information about Pure1 subscriptions.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Subscription'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Subscriptions
  /api/1.latest/subscription-licenses:
    get:
      summary: Get subscription licenses
      description: >-
        Retrieves information about Pure1 subscription licenses.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: marketplace_partner_reference_ids
        in: query
        description: >-
          A comma-separated list of marketplace partner reference IDs.
          If there is not at least one resource that matches each
          `marketplace_partner.reference_id` element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: subscription_ids
        in: query
        description: >-
          A comma-separated list of subscription IDs.
          If there is not at least one resource that matches each `subscription.id`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: subscription_names
        in: query
        description: >-
          A comma-separated list of subscription names.
          If there is not at least one resource that matches each `subscription.name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/SubscriptionLicense'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Subscriptions
  /api/1.latest/subscription-assets:
    get:
      summary: Get subscription assets
      description: >-
        Retrieves information about Pure1 subscription assets.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: advanced_space
        in: query
        description: >-
          If `true`, returns the `advanced_space` field containing physical and effective
          space information.
        type: boolean
        readOnly: true
      - name: subscription_ids
        in: query
        description: >-
          A comma-separated list of subscription IDs.
          If there is not at least one resource that matches each `subscription.id`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: subscription_names
        in: query
        description: >-
          A comma-separated list of subscription names.
          If there is not at least one resource that matches each `subscription.name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: license_ids
        in: query
        description: >-
          A comma-separated list of subscriptionLicense IDs.
          If there is not at least one resource that matches each `license.id`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: license_names
        in: query
        description: >-
          A comma-separated list of subscriptionLicense names.
          If there is not at least one resource that matches each `license.name`
          element, an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/SubscriptionAsset'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Subscriptions
  /api/1.latest/targets:
    get:
      summary: Get targets
      description: >
        Retrieves information about targets.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Target'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Targets
  /api/1.latest/volumes:
    get:
      summary: Get volumes
      description: >
        Retrieves information about FlashArray volume objects.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/Volume'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Volumes
  /api/1.latest/volume-snapshots:
    get:
      summary: Get volume snapshots
      description: >
        Retrieves information about snapshots of volumes.
      parameters:
      - name: Authorization
        in: header
        description: >-
          Access token (in JWT format) required to use any API endpoint (except `/oauth2`)
        type: string
      - name: X-Request-ID
        in: header
        description: >-
          Supplied by client during request or generated by server.
        type: string
      - name: continuation_token
        in: query
        description: >-
          An opaque token used to iterate over a collection.
          The token to use on the next request is returned in the
          `continuation_token` field of the result.
          Single quotes are required around all strings.
        x-quoted: true
        type: string
      - name: filter
        in: query
        description: >-
          Exclude resources that don't match the specified criteria.
          Single quotes are required around all strings inside the filters.
        type: string
      - name: ids
        in: query
        description: >-
          A comma-separated list of resource IDs.
          If there is not at least one resource that matches each `id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: limit
        in: query
        description: >-
          Limit the size of the response to the specified number of resources.
          A limit of 0 can be used to get the number of resources without getting
          all of the resources. It will be returned in the total_item_count field.
          If a client asks for a page size larger than the maximum number, the request
          is still valid. In that case the server just returns the maximum number
          of
          items, disregarding the client's page size request. If not specified, defaults
          to 1000.
        type: integer
        format: int32
      - name: names
        in: query
        description: >-
          A comma-separated list of resource names.
          If there is not at least one resource that matches each `name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: offset
        in: query
        description: >-
          The offset of the first resource to return from a collection.
        type: integer
        format: int32
        minimum: 0
      - name: sort
        in: query
        description: >-
          Sort the response by the specified fields (in descending order if '-'
          is appended to the field name).
          If you provide a sort you will not get a continuation token in
          the response.
        type: array
        collectionFormat: csv
        items:
          type: string
          pattern: ^[a-z]+(_[a-z]+)*-?
      - name: source_ids
        in: query
        description: >-
          A comma-separated list of ids for the source of the object.
          If there is not at least one resource that matches each `source_id` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      - name: source_names
        in: query
        description: >-
          A comma-separated list of names for the source of the object.
          If there is not at least one resource that matches each `source_name` element,
          an error is returned.
          Single quotes are required around all strings.
        x-quoted: true
        type: array
        collectionFormat: csv
        items:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
                description: Supplied by client during request or generated by server.
                schema:
                  type: string
            X-RateLimit-Limit-minute:
                description: The number of requests available per minute.
                schema:
                  type: integer
            X-RateLimit-Limit-second:
                description: The number of requests available per second.
                schema:
                  type: integer
            X-RateLimit-Remaining-minute:
                description: >-
                  The number of requests remaining for the organization in that minute.
                schema:
                  type: integer
            X-RateLimit-Remaining-second:
                description: >-
                  The number of requests remaining for the organization in that second.
                schema:
                  type: integer
          schema:
            allOf:
            - type: object
              properties:
                continuation_token:
                  type: string
                  description: >-
                    Continuation token that can be provided in the continuation_token
                    query param to get the next page of data.
                    If you use the continuation token to page through data you
                    are guaranteed to get all items exactly once regardless of
                    how items are modified. If an item is added or deleted during
                    the pagination then it may or may not be returned.
                    The continuation token is generated if the limit is less
                    than the remaining number of items, and the default sort is used
                    (no sort is specified).
                  example: MThkMzJmYWUtZDI3OS00ODEzLWIzODYtMmM3NmFhMTMwM2My
                total_item_count:
                  type: integer
                  format: int32
                  description: Total number of items after applying filter params.
                  example: 1
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/VolumeSnapshot'
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        403:
          description: FORBIDDEN
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
        404:
          description: NOT FOUND
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        429:
          description: TOO MANY REQUESTS
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
        500:
          description: INTERNAL SERVER ERROR
          schema:
            type: object
            properties:
              errors:
                description: The list of errors encountered.
                type: array
                items:
                  type: object
                  properties:
                    context:
                      type: string
                      example: Error with ...
                    message:
                      type: string
                      example: Something was wrong
          headers:
            X-Request-ID:
              description: Supplied by client during request or generated by server.
              schema:
                type: string
            X-RateLimit-Limit-minute:
              description: The number of requests available per minute.
              schema:
                type: integer
            X-RateLimit-Limit-second:
              description: The number of requests available per second.
              schema:
                type: integer
            X-RateLimit-Remaining-minute:
              description: >-
                The number of requests remaining for the organization in that minute.
              schema:
                type: integer
            X-RateLimit-Remaining-second:
              description: >-
                The number of requests remaining for the organization in that second.
              schema:
                type: integer
      tags:
      - Volume Snapshots
definitions:
  Alert:
    allOf:
    - description: >-
        An alert from an array.
      allOf:
      - description: >-
          An ordinary (as opposed to built-in) resource that exists on one or
          multiple arrays and can be created, named, renamed or deleted by the
          user. This might be a virtual resource (e.g., a volume), or correspond
          to something in the environment, like a host or a server.
        allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created, named,
            renamed, or deleted by the user. This might be a virtual resource (e.g.,
            a volume), or correspond to something in the physical environment, like
            a
            host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: A modifiable, locally unique name chosen by the user.
                type: string
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          actual:
            description: Actual condition at the time of the alert.
            type: string
            example: empty
          category:
            description: >-
              Category of the alert. Valid values are `array`, `hardware`, and
              `software`.
            type: string
            example: array
          closed:
            description: >-
              Time when the alert was closed, in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          code:
            description: Code associated with the alert.
            type: integer
            example: 100
          component_name:
            description: Name of the component alerted about.
            type: string
            example: drive1
          component_type:
            description: Type of the component alerted about.
            type: string
            example: drive
          created:
            description: >-
              Time when the alert was created, in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          description:
            description: Short description of the alert.
            type: string
            example: Some sort of failure.
          expected:
            description: Expected state/threshold under normal conditions.
            type: string
            example: healthy
          knowledge_base_url:
            description: URL of the relevant Knowledge Base page.
            type: string
            example: https://support.purestorage.com/
          notified:
            description: >-
              Time when the user was notified of the alert, in milliseconds since
              UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          origin:
            description: Origin of the alert. Valid values are `array` and `Pure1`.
            type: string
            example: array
          severity:
            description: >-
              Current severity level. Valid values are `info`, `warning`, `critical`,
              and `hidden`.
            type: string
            example: critical
          state:
            description: >-
              Current state of the alert. Valid values are `open`, `closing`,
              and `closed`.
            type: string
            example: open
          summary:
            description: Summary of the alert.
            type: string
            example: Test alert.
          updated:
            description: >-
              Time when the alert was last updated, in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Array:
    allOf:
    - description: >-
        A FlashArray or FlashBlade storage appliance.
      allOf:
      - description: >-
          A built-in resource. Many are singletons predefined by Purity (e.g., support
          settings). Some correspond to a piece of software, like an app, or hardware,
          like a controller. Others are created by the system in response to some
          event
          (e.g., alerts, audit records).

          Typically, a user can't create, delete or rename a built-in resource. A
          few
          can be created or deleted, but not renamed because the names are meaningful
          to Purity (e.g., VIFs).
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - readOnly: true
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 01c2889a-4124-49ff-8cbd-c33405ede123
            name:
              description: A non-modifiable, locally unique name chosen by the system.
              type: string
              readOnly: true
              example: example_name
      - properties:
          model:
            description: Model of the array.
            readOnly: true
            type: string
            example: FA-m70r2
          os:
            description: >-
              Valid values are `Elasticity`, `Purity`, `Purity//FA` and `Purity//FB`.
            type: string
            readOnly: true
            example: Purity//FA
          version:
            type: string
            readOnly: true
            example: 5.0.0
    - properties:
        fqdn:
          description: The fully qualified domain name of the array.
          readOnly: true
          type: string
          example: https://array01.dc1.example.com
  Audit:
    allOf:
    - description: >-
        An audit of an action executed on an array or in Pure1.
      allOf:
      - description: >-
          An ordinary (as opposed to built-in) resource that exists on one or
          multiple arrays and can be created, named, renamed or deleted by the
          user. This might be a virtual resource (e.g., a volume), or correspond
          to something in the environment, like a host or a server.
        allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created, named,
            renamed, or deleted by the user. This might be a virtual resource (e.g.,
            a volume), or correspond to something in the physical environment, like
            a
            host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: A modifiable, locally unique name chosen by the user.
                type: string
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          arguments:
            description: Arguments provided to the command.
            type: string
            example: --args
          command:
            description: The command that was executed.
            type: string
            example: purevol
          origin:
            description: Origin of the action. Valid values are `array` and `Pure1`.
            type: string
            example: array
          subcommand:
            description: The subcommand that was executed.
            type: string
            example: snap
          time:
            description: >-
              Time at which the command was run in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          user:
            description: The user who ran the command.
            type: string
            example: pureuser
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Blade:
    allOf:
    - description: >-
        A FlashBlade blade.
      allOf:
      - description: >-
          A built-in resource. Many are singletons predefined by Purity (e.g., support
          settings). Some correspond to a piece of software, like an app, or hardware,
          like a controller. Others are created by the system in response to some
          event
          (e.g., alerts, audit records).

          Typically, a user can't create, delete or rename a built-in resource. A
          few
          can be created or deleted, but not renamed because the names are meaningful
          to Purity (e.g., VIFs).
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - readOnly: true
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 01c2889a-4124-49ff-8cbd-c33405ede123
            name:
              description: A non-modifiable, locally unique name chosen by the system.
              type: string
              readOnly: true
              example: example_name
      - properties:
          arrays:
            description: >-
              A list of arrays that contain this blade.
              Each blade should only exist on one array.
            type: array
            items:
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - type: object
              - readOnly: true
              - properties:
                  used_blades:
                    description: >-
                      Count of used blade slots in the array.
                    type: integer
                    format: int64
                    example: 10
                  total_blades:
                    description: >-
                      Count of total blade slots in the array.
                    type: integer
                    format: int64
                    example: 15
            minItems: 1
          details:
            type: string
            readOnly: true
            description: >-
              Extra details about the blade. Will be `null` if none exist.
          raw_capacity:
            type: number
            format: int64
            readOnly: true
            description: >-
              The raw storage capacity of the blade.
          status:
            description: >-
              Valid values are `critical`, `evacuated`, `evacuating`, `healthy`,
              `identifying`, `unclaimed`, `unhealthy`, `unknown`, `unrecognized`.
            type: string
            readOnly: true
            example: healthy
    - properties:
        arrays:
          description: >-
            A list of arrays that contain this blade.
            Each blade should only exist on one array.
          type: array
          items:
            allOf:
            - allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - type: object
              - readOnly: true
              - properties:
                  used_blades:
                    description: >-
                      Count of used blade slots in the array.
                    type: integer
                    format: int64
                    example: 10
                  total_blades:
                    description: >-
                      Count of total blade slots in the array.
                    type: integer
                    format: int64
                    example: 15
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
          minItems: 1
  Bucket:
    allOf:
    - allOf:
      - description: >-
          An ordinary (as opposed to built-in) resource that exists on one or
          multiple arrays and can be created, named, renamed or deleted by the
          user. This might be a virtual resource (e.g., a volume), or correspond
          to something in the environment, like a host or a server.
        allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created, named,
            renamed, or deleted by the user. This might be a virtual resource (e.g.,
            a volume), or correspond to something in the physical environment, like
            a
            host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: A modifiable, locally unique name chosen by the user.
                type: string
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          account:
            type: object
            readOnly: true
            properties:
              id:
                description: The opaque and unique id of this resource.
                type: string
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: The name of this resource.
                type: string
                example: example_name
              resource_type:
                description: >-
                  The type of this resource represented by the name of its REST endpoint.
                  For example, "arrays", "network-interfaces", and "metrics".
                  The value may be `null` if the resource is not represented.
                type: string
                example: example_resource_type
          created:
            type: integer
            readOnly: true
            format: int64
            description: Creation time of the bucket, in milliseconds since Unix epoch.
            example: 1502729489760
          destroyed:
            type: boolean
            description: >-
              Returns a value of `true` if the bucket is destroyed, but not yet eradicated.
          object_count:
            type: integer
            readOnly: true
            format: int64
            description: The number of objects contained within the bucket.
            example: 15
          versioning:
            type: string
            description: >-
              The versioning state for objects within the bucket.
              Valid values are `none`, `enabled`, and `suspended`.
    - description: >-
        A built-in resource that exists on one or multiple arrays.
      allOf:
      - description: >-
          An ordinary (as opposed to built-in) resource that can be created, named,
          renamed, or deleted by the user. This might be a virtual resource (e.g.,
          a volume), or correspond to something in the physical environment, like
          a
          host or a server.
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
            name:
              description: A modifiable, locally unique name chosen by the user.
              type: string
              example: example_name
      - type: object
        readOnly: true
        properties:
          arrays:
            description: >-
              The list of arrays where this resource exists. Many resources are on
              a single array, but
              some resources, such as pods, can be shared across multiple arrays.
            type: array
            items:
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  fqdn:
                    description: >-
                      The fully qualified domain name of the appliance when `resource_type`
                      is `arrays`,
                      `null` otherwise.
                    readOnly: true
                    type: string
                    example: example_name.dc1.example.com
  BucketReplicaLink:
    description: A replica link between two buckets.
    type: object
    allOf:
    - description: A replica link between two buckets.
      type: object
      allOf:
      - allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created or deleted
            by the user. This might be a virtual resource (e.g., a volume), or correspond
            to something in the physical environment, like a host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
        - properties:
            lag:
              type: integer
              format: int64
              readOnly: true
              example: 1560
              description: >-
                Duration, in milliseconds, which represents how far behind the
                replication `target` is from the `source`.
            paused:
              type: boolean
              example: false
              description: >-
                Returns `true` if the replica link is paused.
            recovery_point:
              type: integer
              format: int64
              readOnly: true
              example: 1565034592494
              description: >-
                Time when the last piece of data was replicated, measured in
                milliseconds since the UNIX epoch, and the recovery point of the
                resource.
            status:
              type: string
              example: replicating
              description: >-
                Status of the replica link. Values include `replicating`, `idle`,
                and `unhealthy`.
      - properties:
          recovery_point:
            type: integer
            format: int64
            readOnly: true
            example: 1565034592494
            description: >-
              Time when the last piece of data was replicated, in milliseconds since
              the UNIX epoch, and the recovery point of the bucket.
          status_details:
            type: string
            example: null
            description: >-
              Detailed information about the status of the replica link when it is
              `unhealthy`.
          members:
            type: array
            description: The union of source and target buckets in the replica link.
            items:
              description: >-
                An ordinary resource that exists in one location.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  location:
                    type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
          sources:
            type: array
            description: The source buckets in the replica link.
            items:
              description: >-
                An ordinary resource that exists in one location.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  location:
                    type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
          targets:
            type: array
            description: The target buckets in the replica link.
            items:
              description: >-
                An ordinary resource that exists in one location.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  location:
                    type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
    - properties:
        members:
          type: array
          description: The union of source and target buckets in the replica link.
          items:
            description: >-
              An ordinary resource that exists in one location.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                location:
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      fqdn:
                        description: >-
                          The fully qualified domain name of the appliance when `resource_type`
                          is `arrays`,
                          `null` otherwise.
                        readOnly: true
                        type: string
                        example: example_name.dc1.example.com
        sources:
          type: array
          description: The source buckets in the replica link.
          items:
            description: >-
              An ordinary resource that exists in one location.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                location:
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      fqdn:
                        description: >-
                          The fully qualified domain name of the appliance when `resource_type`
                          is `arrays`,
                          `null` otherwise.
                        readOnly: true
                        type: string
                        example: example_name.dc1.example.com
        targets:
          type: array
          description: The target buckets in the replica link.
          items:
            description: >-
              An ordinary resource that exists in one location.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                location:
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      fqdn:
                        description: >-
                          The fully qualified domain name of the appliance when `resource_type`
                          is `arrays`,
                          `null` otherwise.
                        readOnly: true
                        type: string
                        example: example_name.dc1.example.com
  Controller:
    allOf:
    - description: >-
        A platform that runs the Purity//FA Operating Environment.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - type: object
        readOnly: true
        properties:
          arrays:
            description: >-
              The list of arrays where this resource exists. Many resources are on
              a single array, but
              some resources, such as pods, can be shared across multiple arrays.
            type: array
            items:
              type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
      - properties:
          mode:
            type: string
            description: >-
              Mode of the controller.
              Values include `not present`, `offline`, `primary`, and `secondary`.
            example: primary
          model:
            type: string
            description: Model of the controller.
            example: FA-m50
          status:
            type: string
            description: >-
              Status of the controller. Values include `not ready`, `ready`, `unknown`,
              and `updating`.
            example: ready
          type:
            type: string
            description: >-
              Type of the controller. Values include `array_controller` and `shelf_controller`.
            example: array_controller
          version:
            type: string
            description: Version of the controller.
            example: 5.0.0
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Directory:
    allOf:
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
    - description: >-
        A managed directory on an array.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: >-
              Is the managed directory destroyed?
            type: boolean
            example: false
          directory_name:
            description: >-
              The managed directory name without the file system name prefix.
              A managed directory full name is constructed in the form of `FILE_SYSTEM:DIR`
              where
              `FILE_SYSTEM` is the file system name and `DIR` is the value of this
              field.
              On FlashArray versions below `6.0.2`, the value is always `null`.
            type: string
            readOnly: true
          file_system:
            description: >-
              The file system that this managed directory is in.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            readOnly: true
          path:
            description: >-
              Absolute path of the managed directory in the file system.
            type: string
            readOnly: true
  Drive:
    allOf:
    - description: >-
        Information about a flash, NVRAM, or cache module.
      allOf:
      - description: >-
          A built-in resource. Many are singletons predefined by Purity (e.g., support
          settings). Some correspond to a piece of software, like an app, or hardware,
          like a controller. Others are created by the system in response to some
          event
          (e.g., alerts, audit records).

          Typically, a user can't create, delete or rename a built-in resource. A
          few
          can be created or deleted, but not renamed because the names are meaningful
          to Purity (e.g., VIFs).
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - readOnly: true
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 01c2889a-4124-49ff-8cbd-c33405ede123
            name:
              description: A non-modifiable, locally unique name chosen by the system.
              type: string
              readOnly: true
              example: example_name
      - properties:
          arrays:
            description: >-
              A list of arrays that contain this drive.
              Each drive should only exist on one array.
            type: array
            items:
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - type: object
              - readOnly: true
              - properties:
                  drive_count:
                    description: >-
                      Count of drives in the array.
                    type: integer
                    format: int64
                    example: 24
                  total_capacity:
                    description: >-
                      The total capacity of all drives in the array.
                    type: integer
                    format: int64
                    example: 7625244672
            minItems: 1
          capacity:
            type: number
            readOnly: true
            format: int64
            description: >-
              Physical storage capacity of the module (in bytes).
            example: 494927872
          details:
            type: string
            readOnly: true
            description: >-
              Details about the status of the module if status is not `healthy`.
            example: Slow link speed.
          protocol:
            type: string
            readOnly: true
            description: >-
              Storage protocol of the module. Values include `NVMe` and `SAS`.
            example: SAS
          status:
            type: string
            readOnly: true
            description: >-
              Current status of the module. Values include `empty`, `failed`,
              `healthy`, `identifying`, `missing`, `recovering`, `unadmitted`,
              `unhealthy`, `unrecognized`, and `updating`.
            example: healthy
          type:
            type: string
            readOnly: true
            description: >-
              The type of the module. Values include `cache`, `NVRAM`, `SSD`,
              and `virtual`.
            example: SSD
    - properties:
        arrays:
          description: >-
            A list of arrays that contain this drive.
            Each drive should only exist on one array.
          type: array
          items:
            allOf:
            - allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - type: object
              - readOnly: true
              - properties:
                  drive_count:
                    description: >-
                      Count of drives in the array.
                    type: integer
                    format: int64
                    example: 24
                  total_capacity:
                    description: >-
                      The total capacity of all drives in the array.
                    type: integer
                    format: int64
                    example: 7625244672
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
          minItems: 1
  FileSystem:
    allOf:
    - description: >-
        A file system on an array, including both FlashArray and FlashBlade file systems.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: >-
              Is the file system destroyed?
            type: boolean
            example: false
          fast_remove_directory_enabled:
            description: >-
              On a FlashBlade file system, returns the value of `true` if fast remove
              directory
              is enabled and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            type: boolean
            example: false
          hard_limit_enabled:
            description: >-
              On a FlashBlade file system, returns the value of `true` if the file
              system's size
              is a hard limit quota and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            type: boolean
            example: false
          http:
            description: HTTP configuration. On a FlashArray file system, the value
              is always `null`.
            allOf:
            - type: object
              properties:
                enabled:
                  type: boolean
                  description: Is the protocol enabled?
                  example: false
          nfs:
            description: NFS configuration. On a FlashArray file system, the value
              is always `null`.
            allOf:
            - allOf:
              - properties:
                  enabled:
                    type: boolean
                    description: Is the protocol enabled?
                    example: false
                  rules:
                    type: string
                    description: NFS rules.
                    example: 10.0.0.1(ro)
          provisioned:
            description: >-
              The provisioned size of the file system in bytes. A value of 0 means
              unlimited. On a FlashArray file system, the value is always `null`.
            type: integer
            format: int64
            example: 1099511627776
          smb:
            description: SMB configuration. On a FlashArray file system, the value
              is always `null`.
            allOf:
            - type: object
              properties:
                enabled:
                  type: boolean
                  description: >-
                    Is the protocol enabled?
          snapshot_directory_enabled:
            type: boolean
            description: >-
              On a FlashBlade file system, returns the value of `true` if snapshot
              directory is enabled
              and `false` if it is not.
              On a FlashArray file system, the value is always `null`.
            example: false
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  FileSystemReplicaLink:
    description: A replica link between two FlashBlade file systems.
    type: object
    allOf:
    - description: A replica link between two FlashBlade file systems.
      type: object
      allOf:
      - allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created or deleted
            by the user. This might be a virtual resource (e.g., a volume), or correspond
            to something in the physical environment, like a host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
        - properties:
            lag:
              type: integer
              format: int64
              readOnly: true
              example: 1560
              description: >-
                Duration, in milliseconds, which represents how far behind the
                replication `target` is from the `source`.
            paused:
              type: boolean
              example: false
              description: >-
                Returns `true` if the replica link is paused.
            recovery_point:
              type: integer
              format: int64
              readOnly: true
              example: 1565034592494
              description: >-
                Time when the last piece of data was replicated, measured in
                milliseconds since the UNIX epoch, and the recovery point of the
                resource.
            status:
              type: string
              example: replicating
              description: >-
                Status of the replica link. Values include `replicating`, `idle`,
                and `unhealthy`.
      - properties:
          recovery_point:
            type: integer
            format: int64
            readOnly: true
            example: 1565034592494
            description: >-
              Time when the last replicated snapshot was created, in milliseconds
              since the UNIX epoch. (i.e. the recovery point if the file system is
              promoted.)
          status_details:
            type: string
            example: null
            description: >-
              Detailed information about the status of the replica link when it is
              `unhealthy`.
          members:
            type: array
            description: >-
              The union of source and target file systems in the replica link.
            items:
              description: >-
                An ordinary resource that exists in one location.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  location:
                    type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
          sources:
            type: array
            description: The source file systems in the replica link.
            items:
              description: >-
                An ordinary resource that exists in one location.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  location:
                    type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
          targets:
            type: array
            description: The target file systems in the replica link.
            items:
              description: >-
                An ordinary resource that exists in one location.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  location:
                    type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
    - properties:
        members:
          type: array
          description: >-
            The union of source and target file systems in the replica link.
          items:
            description: >-
              An ordinary resource that exists in one location.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                location:
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      fqdn:
                        description: >-
                          The fully qualified domain name of the appliance when `resource_type`
                          is `arrays`,
                          `null` otherwise.
                        readOnly: true
                        type: string
                        example: example_name.dc1.example.com
        sources:
          type: array
          description: The source file systems in the replica link.
          items:
            description: >-
              An ordinary resource that exists in one location.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                location:
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      fqdn:
                        description: >-
                          The fully qualified domain name of the appliance when `resource_type`
                          is `arrays`,
                          `null` otherwise.
                        readOnly: true
                        type: string
                        example: example_name.dc1.example.com
        targets:
          type: array
          description: The target file systems in the replica link.
          items:
            description: >-
              An ordinary resource that exists in one location.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                location:
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      fqdn:
                        description: >-
                          The fully qualified domain name of the appliance when `resource_type`
                          is `arrays`,
                          `null` otherwise.
                        readOnly: true
                        type: string
                        example: example_name.dc1.example.com
  FileSystemSnapshot:
    allOf:
    - description: >-
        A point-in-time image of the contents of a FlashBlade file system.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          destroyed:
            description: >-
              Indicates if this snapshot has been destroyed and is pending
              eradication.
            type: boolean
            example: false
          on: # yamllint disable rule:truthy
            description: >-
              A reference to the array where the snapshot is stored.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          source:
            description: >-
              A reference to the file system that the snapshot was taken from.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          suffix:
            description: Indicates the suffix of the snapshot.
            type: string
            example: checkpoint_2018_01_01
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
    - properties: # `on` was defined in 1.0. Add `fqdn` property.
        on:
          allOf:
          - allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Hardware:
    allOf:
    - description: >-
        A hardware component.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          details:
            type: string
            description: >-
              Details about the component if `status` is not `healthy`.
            example: Temperature too high
          identify_enabled:
            type: boolean
            description: If true, the ID light is lit to visually identify the component.
            example: true
          model:
            type: string
            description: >-
              Model number of the hardware component.
            example: DFSC1
          serial:
            type: string
            description: >-
              Serial number of the hardware component.
            example: PSMFL1717009B
          slot:
            type: integer
            format: int32
            description: >-
              Slot number occupied by the PCI Express card that hosts the component.
            example: 16
          speed:
            type: integer
            format: int64
            description: >-
              Speed (in bytes per second) at which the component is operating.
            example: 24000000000
          status:
            type: string
            description: >-
              Component status. Values include `critical`, `healthy`, `identifying`,
              `unhealthy`, `unclaimed`, `unknown`, `unrecognized`, and `unused`.
            example: critical
          temperature:
            type: integer
            format: int32
            description: >-
              Temperature (in degrees Celsius) reported by the component.
            example: 25
          type:
            type: string
            description: >-
              Type of the hardware component. Values include `am`, `chassis`, `controller`,
              `cooling`,
              `drive_bay`, `eth_port`, `fan`, `fc_port`, `flash_blade`, `ib_port`,
              `mgmt_port`,
              `nvram_bay`, `power_supply`, `sas_module`, `sas_port`, `storage_shelf`,
              and `temp_sensor`.
            example: controller
          voltage:
            type: integer
            format: int32
            description: >-
              Voltage (in Volts) reported by the component.
            example: 206
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  HardwareConnector:
    allOf:
    - description: >-
        Details about the array's connection ports.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          connector_type:
            type: string
            description: Form-factor of the interface. Values include `QSFP` and `RJ-45`.
            example: QSFP
          lane_speed:
            type: number
            format: int64
            description: Configured speed of each lane in the connector in bits per
              second.
            example: 10000000000
          port_count:
            type: number
            format: int64
            description: Configured number of ports in the connector.
            example: 1
          transceiver_type:
            type: string
            description: >-
              Type of transceiver plugged into the connector port.
              If the type cannot be auto-detected and the internal user has not
              specified a type, the value will be `Unknown`.
              If nothing is plugged into the QSFP port, the value will be `Unused`.
              Transceiver type is not applicable for RJ-45 connectors.
            example: 40GBASE-LR4
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Invoice:
    type: object
    properties:
      id:
        description: The invoice number, a globally unique identifier for this invoice.
        type: string
        example: INV123456
      date:
        description: >-
          The issuance date.
          Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
          since UNIX epoch.
        type: integer
        format: int64
        example: 1672531200000
      status:
        description: The invoice status. Values include `open` and `paid`.
        type: string
        example: open
      amount:
        description: The total invoice amount, expressed in the currency defined in
          `currency`.
        type: number
        format: double
        example: 1070.00
      currency:
        description: >-
          The currency of the invoice in ISO 4217 format.
          This currency applies to the total invoice amount as well as all amounts
          in line items.
        type: string
        example: USD
      due_date:
        description: >-
          The payment due date.
          Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
          since UNIX epoch.
        type: integer
        format: int64
        example: 1672531200000
      payment_terms:
        description: The invoice payment terms.
        type: string
        example: Net 45
      ship_date:
        description: >-
          The invoice shipment date.
          Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
          since UNIX epoch.
        type: integer
        format: int64
        example: 1672531200000
      sales_representative:
        description: The sales representative that issued the invoice.
        type: string
        example: John Doe
      partner_purchase_order:
        description: The partner purchase order number.
        type: string
        example: 123456-1
      end_user_purchase_order:
        description: The end user customer purchase order number.
        type: string
        example: 415Tib/400Tib/123456
      end_user_name:
        description: The end user customer name.
        type: string
        example: Pure Storage
      lines:
        description: A list of invoice line items.
        type: array
        items:
          type: object
          properties:
            item:
              description: The name of invoice item.
              type: string
              example: SS-DFM-15TB 1MO,ADV,GOLD
            quantity:
              description: The quantity of current invoice item.
              type: integer
              format: int64
              minimum: 0
              example: 2
            description:
              type: string
              example: SS-DFM-15TB 1 Month Evergreen Forever Subscription, NBD Delivery,
                24/7 Support
            start_date:
              description: >-
                The invoice item start date.
                Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
                since UNIX epoch.
              type: integer
              format: int64
              example: 1672531200000
            end_date:
              description: >-
                The invoice item end date.
                Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
                since UNIX epoch.
              type: integer
              format: int64
              example: 1672531200000
            components:
              description: The sub-components of current invoice item.
              type: array
              items:
                type: object
                properties:
                  item:
                    description: The name of invoice component.
                    type: string
                    example: 08-0144
                  quantity:
                    description: The quantity of current invoice component.
                    type: integer
                    format: int64
                    minimum: 0
                    example: 1
                  description:
                    type: string
                    example: 24/7 support
            unit_price:
              description: The unit price of current invoice item, currency is specified
                in invoice currency.
              type: number
              format: double
              example: 500.00
            amount:
              description: The total price of current invoice item, currency is specified
                in invoice currency.
              type: number
              format: double
              example: 1000.00
            tax:
              type: object
              properties:
                percentage:
                  description: The tax ratio in percentage.
                  type: number
                  format: float
                  minimum: 0.0
                  maximum: 1.0
                  example: 0.07
                amount:
                  description: The total taxes of current invoice item, currency is
                    specified in invoice currency.
                  type: number
                  format: double
                  example: 70.00
                exemption_statement:
                  description: The tax exemption statement.
                  type: string
      subscription:
        description: A reference to which subscription this invoice belongs.
        allOf:
        - type: object
          readOnly: true
          properties:
            id:
              description: The opaque and unique id of this resource.
              type: string
              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
            name:
              description: The name of this resource.
              type: string
              example: example_name
            resource_type:
              description: >-
                The type of this resource represented by the name of its REST endpoint.
                For example, "arrays", "network-interfaces", and "metrics".
                The value may be `null` if the resource is not represented.
              type: string
              example: example_resource_type
  Metric:
    description: >-
      A type of measurement recorded on a resource.
    allOf:
    - description: >-
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs).
      allOf:
      - type: object
        properties:
          _as_of:
            description: The freshness of the data (timestamp in millis since epoch).
            type: integer
            readOnly: true
            format: int64
            example: 1502729489760
      - readOnly: true
      - properties:
          id:
            description: A non-modifiable, globally unique ID chosen by the system.
            type: string
            readOnly: true
            example: 01c2889a-4124-49ff-8cbd-c33405ede123
          name:
            description: A non-modifiable, locally unique name chosen by the system.
            type: string
            readOnly: true
            example: example_name
    - type: object
      readOnly: true
      properties:
        availabilities:
          description: >-
            The available resolutions, aggregations and retentions of this metric.
          type: array
          items:
            type: object
            readOnly: true
            properties:
              aggregations:
                description: Available aggregations for this metric at the given resolution,
                  e.g. 'avg', 'max'.
                type: array
                items:
                  description: >-
                    Valid values are `avg` and `max`.
                  type: string
                  example: avg
              resolution:
                description: An available resolution of this metric in milliseconds.
                type: integer
                format: int64
                example: 30000
              retention:
                description: The retention at this given resolution in milliseconds.
                type: integer
                format: int64
                example: 2592000000
        description:
          description: The additional description for the the metric.
          type: string
        resource_types:
          description: >-
            The type of resource (as described by their endpoints) that this metric
            is available at. NOTE that a metric could be available for a combination
            of resource types, e.g. mirrored writes from "arrays" to "pods".
          type: array
          items:
            description: >-
              Valid values are `arrays`, `pods`, and `volumes`.
            type: string
            example: example_resource_type
        unit:
          description: The unit of the metric.
          type: string
          example: B/s
  MetricHistory:
    allOf:
    - description: >-
        Historical time-series data of a given metric on a resource.
      allOf:
      - description: >-
          A built-in resource. Many are singletons predefined by Purity (e.g., support
          settings). Some correspond to a piece of software, like an app, or hardware,
          like a controller. Others are created by the system in response to some
          event
          (e.g., alerts, audit records).

          Typically, a user can't create, delete or rename a built-in resource. A
          few
          can be created or deleted, but not renamed because the names are meaningful
          to Purity (e.g., VIFs).
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - readOnly: true
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 01c2889a-4124-49ff-8cbd-c33405ede123
            name:
              description: A non-modifiable, locally unique name chosen by the system.
              type: string
              readOnly: true
              example: example_name
      - type: object
        readOnly: true
        properties:
          aggregation:
            description: The aggregation of the metric data.
            type: string
            example: avg
          data:
            description: >-
              The data points of the metric corresponding to the time window,
              resolution and aggregation. The points are returned in a nested array
              of 2-element arrays. For each of the 2-element array, the 1st element
              is the UTC millisecond epoch, and the 2nd element is the value,
              e.g. [[1519362000000, 11], [1519362030000, 21], ...].
            type: array
            items:
              type: array
              items:
                type: number
                minItems: 2
                maxItems: 2
              example: [1502729489760, 123]
          resolution:
            description: The resolution of the metric data in milliseconds.
            type: integer
            format: int64
            example: 30000
          resources:
            type: array
            description: >-
              The references to the resources that the metric data is for.
              For example, write-iops metric for an array will have one element in
              this list referencing the array entity. the write-iops from an array
              to
              a pod will contain two elements in this list - first element pointing
              to the array, and second element pointing to the pod.
            items:
              type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          unit:
            description: The unit of the metric data.
            type: string
            example: B/s
    - properties: # `resources` was defined in 1.0. Add fqdn property.
        resources:
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  NetworkInterface:
    allOf:
    - description: >-
        A point of interconnection between the appliance and a private or public
        network. May be associated with a physical device or a representation of
        a virtual interface.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          address:
            type: string
            description: IP address of this network interface.
            example: 10.11.12.13
          enabled:
            type: boolean
            example: true
          gateway:
            type: string
            example: 10.20.30.40
          hwaddr:
            type: string
            description: Hardware address.
            example: 90:ef:ba:80:70:dc
          mtu:
            type: integer
            format: int32
            description: Maximum transmission unit.
            example: 9000
          netmask:
            type: string
            example: 255.255.255.0
          services:
            type: array
            description: Services and protocols that are enabled on the interface.
            items:
              description: >-
                Valid values are `iscsi`, `management`, `nvme/fc`, `nvme/roce`,
                  and `replication`.
              type: string
              example: iscsi
          speed:
            type: integer
            format: int64
            description: Speed in bytes per second.
            example: 10000000000
          subinterfaces:
            type: array
            items:
              type: string
              example: ct0.eth0
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Pod:
    allOf:
    - description: >-
        An administrative domain, a data container, and a namespace for
        volumes and protection groups.
      allOf:
      - description: >-
          An ordinary (as opposed to built-in) resource that can be created, named,
          renamed, or deleted by the user. This might be a virtual resource (e.g.,
          a volume), or correspond to something in the physical environment, like
          a
          host or a server.
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
            name:
              description: A modifiable, locally unique name chosen by the user.
              type: string
              example: example_name
      - properties:
          arrays:
            description: >-
              A list of arrays that share this pod. If two or more arrays are
              specified, all data in the pod is synchronously mirrored between
              them.
            type: array
            items:
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - type: object
              - readOnly: true
              - properties:
                  frozen_at:
                    description: >-
                      The Unix timestamp of when the array was last in sync with the
                      pod (or
                      null if the array is currently in sync).
                    type: integer
                    format: int64
                    example: 1502729489760
                  mediator_status:
                    description: >-
                      The status of the mediator as assessed by this array.
                      Valid values are `flummoxed`, `online`, `unknown`, and `unreachable`.
                      `flummoxed` - The array has the wrong UUID for the mediator.
                      This means
                      that the array can reach a mediator, but is talking to the wrong
                      one.
                      Typically, this would be due to a misconfiguration in the customer
                      environment (e.g. DNS misconfiguration).
                      UUIDs also have a TTL. If a pod goes offline on one array, and
                      stays
                      like that for weeks (such that the TTL expires), it may also
                      show this
                      status until the peer array is reachable again.
                      `online` - The array is successfully communicating with the
                      mediator.
                      `unreachable` - The array cannot reach the mediator. This could
                      be due
                      to a network issue or the mediator is down.
                    type: string
                    example: online
                  status:
                    description: >-
                      Status of an array in the pod.
                      Valid values are `offline`, `online`, `resyncing`, and `unknown`.
                      `offline` - There is a problem.
                      This array cannot confirm it has the latest data for this pod.
                      This array can not handle IO to the pod nor could it take over
                      during an
                      HA event.
                      `online` - Everything is fine.
                      This array has the latest data for this pod.
                      This array can handle IO to the pod and can take over during
                      an HA
                      event.
                      `resyncing` - There was a problem.
                      This array is actively catching up to get the latest data for
                      this
                      pod. This array can handle IO to this pod's volumes, however
                      it could
                      not take over during an HA event.
                      `unknown` - The state of the pod on this array cannot be determined.
                      This state is only seen on disconnected arrays.
                      The disconnected array cannot determine if the pod on another
                      array is
                      online or offline.
                    type: string
                    readOnly: true
                    example: resyncing
            minItems: 1
          mediator:
            description: The URL of the mediator for this pod.
            type: string
            example: purestorage
          source:
            description: A reference to the source pod of a pod clone.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  PodReplicaLink:
    description: A replica link between two pods.
    type: object
    allOf:
    - description: A replica link between two pods.
      type: object
      allOf:
      - allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created or deleted
            by the user. This might be a virtual resource (e.g., a volume), or correspond
            to something in the physical environment, like a host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
        - properties:
            lag:
              type: integer
              format: int64
              readOnly: true
              example: 1560
              description: >-
                Duration, in milliseconds, which represents how far behind the
                replication `target` is from the `source`.
            paused:
              type: boolean
              example: false
              description: >-
                Returns `true` if the replica link is paused.
            recovery_point:
              type: integer
              format: int64
              readOnly: true
              example: 1565034592494
              description: >-
                Time when the last piece of data was replicated, measured in
                milliseconds since the UNIX epoch, and the recovery point of the
                resource.
            status:
              type: string
              example: replicating
              description: >-
                Status of the replica link. Values include `replicating`, `idle`,
                and `unhealthy`.
      - properties:
          members:
            type: array
            description: The union of source and target pods in the replica link.
            items:
              description: >-
                A resource that may relate to multiple locations.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  locations:
                    type: array
                    items:
                      type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
          recovery_point:
            type: integer
            description: >-
              Time when the last piece of data was replicated, in milliseconds since
              the UNIX epoch, and the recovery point if the target pod is promoted.
              If the pod is currently baselining then the value is `null`.
          sources:
            type: array
            description: The source pods in the replica link.
            items:
              description: >-
                A resource that may relate to multiple locations.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  locations:
                    type: array
                    items:
                      type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
          status:
            type: string
            example: replicating
            description: >-
              Status of the replica link. Values include `replicating`, `idle`,
              `baselining`, `paused`, `quiescing`, `quiesced`, and `unhealthy`.
          targets:
            type: array
            description: The target pods in the replica link.
            items:
              description: >-
                A resource that may relate to multiple locations.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
              - properties:
                  locations:
                    type: array
                    items:
                      type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
    - properties:
        members:
          type: array
          description: The union of source and target pods in the replica link.
          items:
            description: >-
              A resource that may relate to multiple locations.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                locations:
                  type: array
                  items:
                    allOf:
                    - type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
                    - properties:
                        fqdn:
                          description: >-
                            The fully qualified domain name of the appliance when
                            `resource_type` is `arrays`,
                            `null` otherwise.
                          readOnly: true
                          type: string
                          example: example_name.dc1.example.com
        sources:
          type: array
          description: The source pods in the replica link.
          items:
            description: >-
              A resource that may relate to multiple locations.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                locations:
                  type: array
                  items:
                    allOf:
                    - type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
                    - properties:
                        fqdn:
                          description: >-
                            The fully qualified domain name of the appliance when
                            `resource_type` is `arrays`,
                            `null` otherwise.
                          readOnly: true
                          type: string
                          example: example_name.dc1.example.com
        targets:
          type: array
          description: The target pods in the replica link.
          items:
            description: >-
              A resource that may relate to multiple locations.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                locations:
                  type: array
                  items:
                    allOf:
                    - type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
                    - properties:
                        fqdn:
                          description: >-
                            The fully qualified domain name of the appliance when
                            `resource_type` is `arrays`,
                            `null` otherwise.
                          readOnly: true
                          type: string
                          example: example_name.dc1.example.com
  Policy:
    allOf:
    - description: >-
        A set of rules that can be applied to resources.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          enabled:
            description: Returns `true` if this policy is enabled.
            type: boolean
            example: true
          rules:
            type: array
            items:
              description: A rule that can be added to a policy.
              type: object
              properties:
                at:
                  type: integer
                  format: int64
                  description: >-
                    Time of day to take the snapshot, in milliseconds since 00:00
                    in the
                    specified `time_zone`. Only valid if `every` is set as whole days.
                  example: 32400000
                every:
                  type: integer
                  format: int64
                  description: How often to take snapshots, in milliseconds.
                  example: 86400000
                keep_for:
                  type: integer
                  format: int64
                  description: How long to keep snapshots, in milliseconds.
                  example: 86400000
                time_zone:
                  type: string
                  description: The time zone in which the `at` rule is applied.
                  example: America/Los_Angeles
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  PolicyMember:
    description: An association between a policy and a member.
    type: object
    allOf:
    - type: object
      properties:
        _as_of:
          description: The freshness of the data (timestamp in millis since epoch).
          type: integer
          readOnly: true
          format: int64
          example: 1502729489760
    - properties:
        policy:
          type: object
          readOnly: true
          properties:
            id:
              description: The opaque and unique id of this resource.
              type: string
              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
            name:
              description: The name of this resource.
              type: string
              example: example_name
            resource_type:
              description: >-
                The type of this resource represented by the name of its REST endpoint.
                For example, "arrays", "network-interfaces", and "metrics".
                The value may be `null` if the resource is not represented.
              type: string
              example: example_resource_type
        member:
          type: object
          readOnly: true
          properties:
            id:
              description: The opaque and unique id of this resource.
              type: string
              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
            name:
              description: The name of this resource.
              type: string
              example: example_name
            resource_type:
              description: >-
                The type of this resource represented by the name of its REST endpoint.
                For example, "arrays", "network-interfaces", and "metrics".
                The value may be `null` if the resource is not represented.
              type: string
              example: example_resource_type
  Port:
    allOf:
    - description: A Purity//FA port.
      type: object
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          iqn:
            type: string
            description: The iSCSI Qualified Name if the port is iSCSI, `null` otherwise.
            example: iqn.2010-06.com.purestorage:flasharray.393d930077be2977
          nqn:
            type: string
            description: The NVMe Qualified Name if the port is NVMe-oF, `null` otherwise.
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          wwn:
            type: string
            description: The Fibre Channel World Wide Name if the port is Fibre Channel,
              `null` otherwise.
            example: 52:4A:93:70:4E:E5:68:00
          portal:
            type: string
            description: The IP and port number if the port is iSCSI or NVMe-oF, `null`
              otherwise.
            example: 10.16.200.27:3260
          failover:
            type: string
            description: >-
              If the array port has failed over, returns the
              name of the port to which this port has failed over.
            example: CT0.ETH2
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Subscription:
    allOf:
    - description: >-
        A Pure1 subscription.
      allOf:
      - description: >-
          A built-in resource. Many are singletons predefined by Purity (e.g., support
          settings). Some correspond to a piece of software, like an app, or hardware,
          like a controller. Others are created by the system in response to some
          event
          (e.g., alerts, audit records).

          Typically, a user can't create, delete or rename a built-in resource. A
          few
          can be created or deleted, but not renamed because the names are meaningful
          to Purity (e.g., VIFs).
        allOf:
        - type: object
          properties:
            _as_of:
              description: The freshness of the data (timestamp in millis since epoch).
              type: integer
              readOnly: true
              format: int64
              example: 1502729489760
        - readOnly: true
        - properties:
            id:
              description: A non-modifiable, globally unique ID chosen by the system.
              type: string
              readOnly: true
              example: 01c2889a-4124-49ff-8cbd-c33405ede123
            name:
              description: A non-modifiable, locally unique name chosen by the system.
              type: string
              readOnly: true
              example: example_name
      - properties:
          expiration_date:
            description: >-
              Date when the subscription expires.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1636238104000
          service:
            description: >-
              The service type of the subscription. Values include
              `Evergreen//One`,
              `Evergreen//Flex`,
              `FlashStack as a Service`,
              `Storage as a Service`,
              `PaaS (Block Storage Service)`,
              `PaaS (File and Object Storage Service)`,
              `PaaS (Data Protection Service)`,
              and
              `Pure1 Subscription`.
            type: string
            example: PaaS (Block Storage Service)
          start_date:
            description: >-
              Date when the subscription starts.
              Represented as a timestamp of 00:00 on that date in UTC, in
              milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1604702243000
          status:
            description: >-
              Current status of the subscription. Values include `active`,
              `terminated`, `poc-expired`, and `signed`.
            type: string
            example: active
    - properties:
        initial_name:
          description: >-
            A non-modifiable, locally unique name that the subscription was started
            with, never changes.
          type: string
          readOnly: true
          example: example_name
        organization:
          description: The Pure1 organization for the subscription.
          allOf:
          - type: object
            readOnly: true
            properties:
              id:
                description: The opaque and unique id of this resource.
                type: string
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: The name of this resource.
                type: string
                example: example_name
              resource_type:
                description: >-
                  The type of this resource represented by the name of its REST endpoint.
                  For example, "arrays", "network-interfaces", and "metrics".
                  The value may be `null` if the resource is not represented.
                type: string
                example: example_resource_type
        partner_name:
          description: The partner who invoices for the subscription.
          type: string
          readOnly: true
          example: Pure Storage Partner
        last_updated_date:
          description: >-
            The date of the last amendment to the current subscription.
            Represented as a timestamp of 00:00 on that date in UTC, in
            milliseconds since UNIX epoch.
          type: integer
          format: int64
          example: 1604702243000
        subscription_term:
          description: Length of the subscription in months.
          type: integer
          example: 24
  SubscriptionLicense:
    allOf:
    - allOf:
      - description: >-
          A license belonging to a Pure1 subscription.
        type: object
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - properties:
            average_on_demand:
              description: >-
                Estimated daily on-demand usage of the license from the current calendar
                quarter to date.
              allOf:
              - type: object
                properties:
                  data:
                    description: >-
                      The data value.
                    type: number
                    example: 123
                  metric:
                    description: >-
                      A reference to the metric this data measures.
                    allOf:
                    - type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
                  unit:
                    description: The unit of the metric.
                    type: string
                    example: B
            expiration_date:
              description: >-
                Date when the license expires.
                Represented as a timestamp of 00:00 on that date in UTC, in
                milliseconds since UNIX epoch.
              type: integer
              format: int64
              example: 1636238104000
            marketplace_partner:
              description: >-
                Reference information about the marketplace partner of this license.
              allOf:
              - type: object
                properties:
                  name:
                    description: >-
                      Name or identifier of the marketplace parter who owns the
                      reference ID.
                    type: string
                    example: pure1
                  reference_id:
                    description: >-
                      External ID the marketplace partner knows to refer to this license.
                    type: string
            reservation:
              description: >-
                Current reservation amount of the license.
              allOf:
              - type: object
                properties:
                  data:
                    description: >-
                      The data value.
                    type: number
                    example: 123
                  metric:
                    description: >-
                      A reference to the metric this data measures.
                    allOf:
                    - type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
                  unit:
                    description: The unit of the metric.
                    type: string
                    example: B
            resources:
              description: >-
                References to the resources that operate under this license.
              type: array
              items:
                allOf:
                - type: object
                  allOf:
                  - type: object
                    readOnly: true
                    properties:
                      id:
                        description: The opaque and unique id of this resource.
                        type: string
                        example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                      name:
                        description: The name of this resource.
                        type: string
                        example: example_name
                      resource_type:
                        description: >-
                          The type of this resource represented by the name of its
                          REST endpoint.
                          For example, "arrays", "network-interfaces", and "metrics".
                          The value may be `null` if the resource is not represented.
                        type: string
                        example: example_resource_type
                  - properties:
                      activation_time:
                        description: >-
                          Time when the resource is activated under the license, in
                          milliseconds since UNIX epoch.
                        type: integer
                        format: int64
                        example: 1604702243000
                      usage:
                        description: >-
                          Current usage of the resource under the license.
                        allOf:
                        - type: object
                          properties:
                            data:
                              description: >-
                                The data value.
                              type: number
                              example: 123
                            metric:
                              description: >-
                                A reference to the metric this data measures.
                              allOf:
                              - type: object
                                readOnly: true
                                properties:
                                  id:
                                    description: The opaque and unique id of this
                                      resource.
                                    type: string
                                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                  name:
                                    description: The name of this resource.
                                    type: string
                                    example: example_name
                                  resource_type:
                                    description: >-
                                      The type of this resource represented by the
                                      name of its REST endpoint.
                                      For example, "arrays", "network-interfaces",
                                      and "metrics".
                                      The value may be `null` if the resource is not
                                      represented.
                                    type: string
                                    example: example_resource_type
                            unit:
                              description: The unit of the metric.
                              type: string
                              example: B
            service_tier:
              description: >-
                The tier of the service for the license.
              type: string
              example: //Block - Ultra
            start_date:
              description: >-
                Date when the license starts.
                Represented as a timestamp of 00:00 on that date in UTC, in
                milliseconds since UNIX epoch.
              type: integer
              format: int64
              example: 1604702243000
            subscription:
              description: >-
                A reference to which subscription this license belongs.
              allOf:
              - type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
            usage:
              description: >-
                Usage of the license, averaged over the last day.
              allOf:
              - type: object
                properties:
                  data:
                    description: >-
                      The data value.
                    type: number
                    example: 123
                  metric:
                    description: >-
                      A reference to the metric this data measures.
                    allOf:
                    - type: object
                      readOnly: true
                      properties:
                        id:
                          description: The opaque and unique id of this resource.
                          type: string
                          example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                        name:
                          description: The name of this resource.
                          type: string
                          example: example_name
                        resource_type:
                          description: >-
                            The type of this resource represented by the name of its
                            REST endpoint.
                            For example, "arrays", "network-interfaces", and "metrics".
                            The value may be `null` if the resource is not represented.
                          type: string
                          example: example_resource_type
                  unit:
                    description: The unit of the metric.
                    type: string
                    example: B
      - properties:
          resources:
            type: array
            items:
              type: object
              allOf:
              - allOf:
                - type: object
                  readOnly: true
                  properties:
                    id:
                      description: The opaque and unique id of this resource.
                      type: string
                      example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                    name:
                      description: The name of this resource.
                      type: string
                      example: example_name
                    resource_type:
                      description: >-
                        The type of this resource represented by the name of its REST
                        endpoint.
                        For example, "arrays", "network-interfaces", and "metrics".
                        The value may be `null` if the resource is not represented.
                      type: string
                      example: example_resource_type
                - properties:
                    fqdn:
                      description: >-
                        The fully qualified domain name of the appliance when `resource_type`
                        is `arrays`,
                        `null` otherwise.
                      readOnly: true
                      type: string
                      example: example_name.dc1.example.com
              - properties:
                  activation_time:
                    description: >-
                      Time when the resource is activated under the license, in
                      milliseconds since UNIX epoch.
                    type: integer
                    format: int64
                    example: 1604702243000
                  usage:
                    description: >-
                      Current usage of the resource under the license.
                    allOf:
                    - type: object
                      properties:
                        data:
                          description: >-
                            The data value.
                          type: number
                          example: 123
                        metric:
                          description: >-
                            A reference to the metric this data measures.
                          allOf:
                          - type: object
                            readOnly: true
                            properties:
                              id:
                                description: The opaque and unique id of this resource.
                                type: string
                                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                              name:
                                description: The name of this resource.
                                type: string
                                example: example_name
                              resource_type:
                                description: >-
                                  The type of this resource represented by the name
                                  of its REST endpoint.
                                  For example, "arrays", "network-interfaces", and
                                  "metrics".
                                  The value may be `null` if the resource is not represented.
                                type: string
                                example: example_resource_type
                        unit:
                          description: The unit of the metric.
                          type: string
                          example: B
    - properties:
        site_address:
          description: The license site address.
          allOf:
          - type: object
            properties:
              city:
                readOnly: true
                type: string
                example: Mountain View
              state:
                description: The state or province.
                readOnly: true
                type: string
                example: CA
              country:
                readOnly: true
                type: string
                example: United States
        last_updated_date:
          description: >-
            The date of the last amendment to the current license.
            Represented as a timestamp of 00:00 on that date in UTC, in
            milliseconds since UNIX epoch.
          type: integer
          format: int64
          example: 1604702243000
        pre_ratio:
          description: >-
            The pre-reduced & encrypted ratio calculated at license level.
          allOf:
          - type: object
            properties:
              data:
                description: >-
                  The data value.
                type: number
                example: 123
              metric:
                description: >-
                  A reference to the metric this data measures.
                allOf:
                - type: object
                  readOnly: true
                  properties:
                    id:
                      description: The opaque and unique id of this resource.
                      type: string
                      example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                    name:
                      description: The name of this resource.
                      type: string
                      example: example_name
                    resource_type:
                      description: >-
                        The type of this resource represented by the name of its REST
                        endpoint.
                        For example, "arrays", "network-interfaces", and "metrics".
                        The value may be `null` if the resource is not represented.
                      type: string
                      example: example_resource_type
              unit:
                description: The unit of the metric.
                type: string
                example: B
          - type: object
            properties:
              data:
                format: float
                example: 3.3
        quarter_on_demand:
          description: >-
            Estimated total on-demand usage of the license of the current calendar
            quarter to date.
          allOf:
          - type: object
            properties:
              data:
                description: >-
                  The data value.
                type: number
                example: 123
              metric:
                description: >-
                  A reference to the metric this data measures.
                allOf:
                - type: object
                  readOnly: true
                  properties:
                    id:
                      description: The opaque and unique id of this resource.
                      type: string
                      example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                    name:
                      description: The name of this resource.
                      type: string
                      example: example_name
                    resource_type:
                      description: >-
                        The type of this resource represented by the name of its REST
                        endpoint.
                        For example, "arrays", "network-interfaces", and "metrics".
                        The value may be `null` if the resource is not represented.
                      type: string
                      example: example_resource_type
              unit:
                description: The unit of the metric.
                type: string
                example: B
  SubscriptionAsset:
    type: object
    allOf:
    - description: >-
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs).
      allOf:
      - type: object
        properties:
          _as_of:
            description: The freshness of the data (timestamp in millis since epoch).
            type: integer
            readOnly: true
            format: int64
            example: 1502729489760
      - readOnly: true
      - properties:
          id:
            description: A non-modifiable, globally unique ID chosen by the system.
            type: string
            readOnly: true
            example: 01c2889a-4124-49ff-8cbd-c33405ede123
          name:
            description: A non-modifiable, locally unique name chosen by the system.
            type: string
            readOnly: true
            example: example_name
    - properties:
        install_address:
          description: >-
            The address where the appliance is installed. This address is also where
            replacement parts will be shipped to.
          allOf:
          - type: object
            properties:
              city:
                readOnly: true
                type: string
                example: Mountain View
              state:
                description: The state or province.
                readOnly: true
                type: string
                example: CA
              country:
                readOnly: true
                type: string
                example: United States
        activation_date:
          description: >-
            The date when the appliance is activated under the license.
            Represented as a timestamp of 00:00 on that date in UTC, in
            milliseconds since UNIX epoch.
          type: integer
          format: int64
          example: 1604702243000
        end_of_life_date:
          description: >-
            The date when the appliance hardware reach end of life and Pure no longer
            provide support.
            Represented as a timestamp of 00:00 on that date in UTC, in
            milliseconds since UNIX epoch.
          type: integer
          format: int64
          example: 1636588800000
        array:
          description: The specific fields for assets that are arrays.
          type: object
          properties:
            version:
              description: The Purity version of the appliance.
              type: string
              readOnly: true
              example: 5.0.0
            model:
              description: The model of the appliance.
              type: string
              readOnly: true
              example: FA-X50R2
            chassis_serial_number:
              description: The chassis serial number of the appliance.
              type: string
              readOnly: true
            space:
              description: >-
                Displays size and space consumption information.
                For Evergreen//One and Evergreen//Flex this is the effective space
                information.
                For Evergreen//Forever and Evergreen//Foundation this is the physical
                space information.
              type: object
              properties:
                total_used:
                  description: The total space contributed by customer data.
                  allOf:
                  - type: object
                    properties:
                      data:
                        description: >-
                          The data value.
                        type: number
                        example: 123
                      metric:
                        description: >-
                          A reference to the metric this data measures.
                        allOf:
                        - type: object
                          readOnly: true
                          properties:
                            id:
                              description: The opaque and unique id of this resource.
                              type: string
                              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                            name:
                              description: The name of this resource.
                              type: string
                              example: example_name
                            resource_type:
                              description: >-
                                The type of this resource represented by the name
                                of its REST endpoint.
                                For example, "arrays", "network-interfaces", and "metrics".
                                The value may be `null` if the resource is not represented.
                              type: string
                              example: example_resource_type
                      unit:
                        description: The unit of the metric.
                        type: string
                        example: B
                total_used_ratio:
                  description: >-
                    The ratio of `total_used` to the `capacity`.
                    This represents how full the appliance is.
                  allOf:
                  - type: object
                    properties:
                      data:
                        description: >-
                          The data value.
                        type: number
                        example: 123
                      metric:
                        description: >-
                          A reference to the metric this data measures.
                        allOf:
                        - type: object
                          readOnly: true
                          properties:
                            id:
                              description: The opaque and unique id of this resource.
                              type: string
                              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                            name:
                              description: The name of this resource.
                              type: string
                              example: example_name
                            resource_type:
                              description: >-
                                The type of this resource represented by the name
                                of its REST endpoint.
                                For example, "arrays", "network-interfaces", and "metrics".
                                The value may be `null` if the resource is not represented.
                              type: string
                              example: example_resource_type
                      unit:
                        description: The unit of the metric.
                        type: string
                        example: B
                  - type: object
                    properties:
                      data:
                        format: float
                        minimum: 0.0
                        maximum: 1.0
                        example: 0.5
                capacity:
                  description: The usable capacity of the appliance.
                  allOf:
                  - type: object
                    properties:
                      data:
                        description: >-
                          The data value.
                        type: number
                        example: 123
                      metric:
                        description: >-
                          A reference to the metric this data measures.
                        allOf:
                        - type: object
                          readOnly: true
                          properties:
                            id:
                              description: The opaque and unique id of this resource.
                              type: string
                              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                            name:
                              description: The name of this resource.
                              type: string
                              example: example_name
                            resource_type:
                              description: >-
                                The type of this resource represented by the name
                                of its REST endpoint.
                                For example, "arrays", "network-interfaces", and "metrics".
                                The value may be `null` if the resource is not represented.
                              type: string
                              example: example_resource_type
                      unit:
                        description: The unit of the metric.
                        type: string
                        example: B
            advanced_space:
              description: >-
                The physical and effective space information.
                Only visible when the query parameter `advanced_space` is set to `true`.
              type: object
              properties:
                physical:
                  description: The physical space information of the appliance.
                  type: object
                  properties:
                    total_used:
                      description: The total space contributed by customer data.
                      allOf:
                      - type: object
                        properties:
                          data:
                            description: >-
                              The data value.
                            type: number
                            example: 123
                          metric:
                            description: >-
                              A reference to the metric this data measures.
                            allOf:
                            - type: object
                              readOnly: true
                              properties:
                                id:
                                  description: The opaque and unique id of this resource.
                                  type: string
                                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                name:
                                  description: The name of this resource.
                                  type: string
                                  example: example_name
                                resource_type:
                                  description: >-
                                    The type of this resource represented by the name
                                    of its REST endpoint.
                                    For example, "arrays", "network-interfaces", and
                                    "metrics".
                                    The value may be `null` if the resource is not
                                    represented.
                                  type: string
                                  example: example_resource_type
                          unit:
                            description: The unit of the metric.
                            type: string
                            example: B
                    total_used_ratio:
                      description: >-
                        The ratio of `total_used` to the `capacity`.
                        This represents how full the appliance is.
                      allOf:
                      - type: object
                        properties:
                          data:
                            description: >-
                              The data value.
                            type: number
                            example: 123
                          metric:
                            description: >-
                              A reference to the metric this data measures.
                            allOf:
                            - type: object
                              readOnly: true
                              properties:
                                id:
                                  description: The opaque and unique id of this resource.
                                  type: string
                                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                name:
                                  description: The name of this resource.
                                  type: string
                                  example: example_name
                                resource_type:
                                  description: >-
                                    The type of this resource represented by the name
                                    of its REST endpoint.
                                    For example, "arrays", "network-interfaces", and
                                    "metrics".
                                    The value may be `null` if the resource is not
                                    represented.
                                  type: string
                                  example: example_resource_type
                          unit:
                            description: The unit of the metric.
                            type: string
                            example: B
                      - type: object
                        properties:
                          data:
                            format: float
                            minimum: 0.0
                            maximum: 1.0
                            example: 0.5
                    capacity:
                      description: The usable capacity of the appliance.
                      allOf:
                      - type: object
                        properties:
                          data:
                            description: >-
                              The data value.
                            type: number
                            example: 123
                          metric:
                            description: >-
                              A reference to the metric this data measures.
                            allOf:
                            - type: object
                              readOnly: true
                              properties:
                                id:
                                  description: The opaque and unique id of this resource.
                                  type: string
                                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                name:
                                  description: The name of this resource.
                                  type: string
                                  example: example_name
                                resource_type:
                                  description: >-
                                    The type of this resource represented by the name
                                    of its REST endpoint.
                                    For example, "arrays", "network-interfaces", and
                                    "metrics".
                                    The value may be `null` if the resource is not
                                    represented.
                                  type: string
                                  example: example_resource_type
                          unit:
                            description: The unit of the metric.
                            type: string
                            example: B
                effective:
                  description: The effective space information of the appliance.
                  type: object
                  properties:
                    total_used:
                      description: The total space contributed by customer data.
                      allOf:
                      - type: object
                        properties:
                          data:
                            description: >-
                              The data value.
                            type: number
                            example: 123
                          metric:
                            description: >-
                              A reference to the metric this data measures.
                            allOf:
                            - type: object
                              readOnly: true
                              properties:
                                id:
                                  description: The opaque and unique id of this resource.
                                  type: string
                                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                name:
                                  description: The name of this resource.
                                  type: string
                                  example: example_name
                                resource_type:
                                  description: >-
                                    The type of this resource represented by the name
                                    of its REST endpoint.
                                    For example, "arrays", "network-interfaces", and
                                    "metrics".
                                    The value may be `null` if the resource is not
                                    represented.
                                  type: string
                                  example: example_resource_type
                          unit:
                            description: The unit of the metric.
                            type: string
                            example: B
                    total_used_ratio:
                      description: >-
                        The ratio of `total_used` to the `capacity`.
                        This represents how full the appliance is.
                      allOf:
                      - type: object
                        properties:
                          data:
                            description: >-
                              The data value.
                            type: number
                            example: 123
                          metric:
                            description: >-
                              A reference to the metric this data measures.
                            allOf:
                            - type: object
                              readOnly: true
                              properties:
                                id:
                                  description: The opaque and unique id of this resource.
                                  type: string
                                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                name:
                                  description: The name of this resource.
                                  type: string
                                  example: example_name
                                resource_type:
                                  description: >-
                                    The type of this resource represented by the name
                                    of its REST endpoint.
                                    For example, "arrays", "network-interfaces", and
                                    "metrics".
                                    The value may be `null` if the resource is not
                                    represented.
                                  type: string
                                  example: example_resource_type
                          unit:
                            description: The unit of the metric.
                            type: string
                            example: B
                      - type: object
                        properties:
                          data:
                            format: float
                            minimum: 0.0
                            maximum: 1.0
                            example: 0.5
                    capacity:
                      description: The usable capacity of the appliance.
                      allOf:
                      - type: object
                        properties:
                          data:
                            description: >-
                              The data value.
                            type: number
                            example: 123
                          metric:
                            description: >-
                              A reference to the metric this data measures.
                            allOf:
                            - type: object
                              readOnly: true
                              properties:
                                id:
                                  description: The opaque and unique id of this resource.
                                  type: string
                                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                                name:
                                  description: The name of this resource.
                                  type: string
                                  example: example_name
                                resource_type:
                                  description: >-
                                    The type of this resource represented by the name
                                    of its REST endpoint.
                                    For example, "arrays", "network-interfaces", and
                                    "metrics".
                                    The value may be `null` if the resource is not
                                    represented.
                                  type: string
                                  example: example_resource_type
                          unit:
                            description: The unit of the metric.
                            type: string
                            example: B
        subscription:
          description: A reference to which subscription this appliance belongs.
          allOf:
          - type: object
            readOnly: true
            properties:
              id:
                description: The opaque and unique id of this resource.
                type: string
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: The name of this resource.
                type: string
                example: example_name
              resource_type:
                description: >-
                  The type of this resource represented by the name of its REST endpoint.
                  For example, "arrays", "network-interfaces", and "metrics".
                  The value may be `null` if the resource is not represented.
                type: string
                example: example_resource_type
        license:
          description: A reference to which license this appliance belongs.
          allOf:
          - type: object
            readOnly: true
            properties:
              id:
                description: The opaque and unique id of this resource.
                type: string
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: The name of this resource.
                type: string
                example: example_name
              resource_type:
                description: >-
                  The type of this resource represented by the name of its REST endpoint.
                  For example, "arrays", "network-interfaces", and "metrics".
                  The value may be `null` if the resource is not represented.
                type: string
                example: example_resource_type
  SupportContract:
    allOf:
    - type: object
      properties:
        start_date:
          description: >-
            Date when the support contract started.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
            since UNIX epoch.
          type: integer
          format: int64
          example: 1550966400000
        end_date:
          description: >-
            Date when the support contract ended.
            Represented as a timestamp of 00:00 on that date in UTC, in milliseconds
            since UNIX epoch.
          type: integer
          format: int64
          example: 1582502400000
        resource:
          type: object
          readOnly: true
          properties:
            id:
              description: The opaque and unique id of this resource.
              type: string
              example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
            name:
              description: The name of this resource.
              type: string
              example: example_name
            resource_type:
              description: >-
                The type of this resource represented by the name of its REST endpoint.
                For example, "arrays", "network-interfaces", and "metrics".
                The value may be `null` if the resource is not represented.
              type: string
              example: example_resource_type
    - properties: # `resource` was defined in 1.0. Add fqdn property.
        resource:
          allOf:
          - allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  SustainabilityArray:
    description: >-
      A single FlashArray/FlashBlade appliance Sustainability assessment information.
    allOf:
    - description: >-
        A built-in resource. Many are singletons predefined by Purity (e.g., support
        settings). Some correspond to a piece of software, like an app, or hardware,
        like a controller. Others are created by the system in response to some event
        (e.g., alerts, audit records).

        Typically, a user can't create, delete or rename a built-in resource. A few
        can be created or deleted, but not renamed because the names are meaningful
        to Purity (e.g., VIFs).
      allOf:
      - type: object
        properties:
          _as_of:
            description: The freshness of the data (timestamp in millis since epoch).
            type: integer
            readOnly: true
            format: int64
            example: 1502729489760
      - readOnly: true
      - properties:
          id:
            description: A non-modifiable, globally unique ID chosen by the system.
            type: string
            readOnly: true
            example: 01c2889a-4124-49ff-8cbd-c33405ede123
          name:
            description: A non-modifiable, locally unique name chosen by the system.
            type: string
            readOnly: true
            example: example_name
    - properties:
        install_address:
          description: >-
            The address where the array is installed. This address is also where
            replacement parts will be shipped to.
          readOnly: true
          allOf:
          - type: object
            properties:
              street_address:
                description: The 1-line format street address of the array install
                  address.
                readOnly: true
                type: string
                example: 599 Castro St, Mountain View, CA 94041 United States
              geolocation:
                description: >
                  The geolocation that contains the latitude and the longitude
                  of the address.
                readOnly: true
                allOf:
                - type: object
                  properties:
                    latitude:
                      description: The latitude of the address.
                      readOnly: true
                      type: number
                      example: 23.2340
                    longitude:
                      description: The longitude of the address.
                      readOnly: true
                      type: number
                      example: 123.9834
              updated:
                description: >
                  The epoch timestamp, in milliseconds, that denotes when the address
                  was updated.
                readOnly: true
                type: integer
                example: 1548080949
        reporting_status:
          description: >-
            Enum value that describes what is the status of the latest assessment.
            Valid values include:
            not_enough_data - There was not enough data
              to calculate assessment level of the appliance.
            unsupported_purity_version - The appliance is running
              an unsupported version of Purity operating system.
              It is an old Purity version which does not provide
              enough data for assessing the sustainability metrics.
            not_phoning_home - The appliance has not phoned home
              for more than 7 days so the assessment level was not calculated
            assessment_ready - Assessment is ready and it is available under `assessment`
            field.
          type: string
          readOnly: true
          example: assessment_ready
        assessment:
          description: >-
            A FlashArray or FlashBlade Sustainability assessment information.
            The _as_of is the time when the computation happened.
            Only the data from the given time interval was used for the aggregation.
            Typically the last week of data is used for the aggregation.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - type: object
            properties:
              _interval_start:
                description: The timestamp of the start of the time interval.
                type: integer
                readOnly: true
                format: int64
                example: 1501519889760
              _interval_end:
                description: The timestamp of the end of the time interval.
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              shelves:
                description: >-
                  The number of expansion shelves of the FlashArray appliance.
                  It is always zero for FlashBlade appliances.
                type: integer
                readOnly: true
                example: 1
              chassis:
                description: >-
                  The number of chassis of the appliance, always one for FlashArray
                  appliances.
                type: integer
                readOnly: true
                example: 1
              blades:
                description: >-
                  The number of blades of the FlashBlade appliance, always zero for
                  FlashArray appliances.
                type: integer
                readOnly: true
                example: 15
              rack_units:
                description: The total number of rack units occupied by the appliance.
                type: integer
                readOnly: true
                example: 4
              capacity_utilization:
                description: >-
                  The percentage of the used capacity.
                  Average over the assessment window.
                type: number
                readOnly: true
                example: 0.68
              array_data_reduction:
                description: >-
                  The data reduction ratio of the appliance.
                  Average over the assessment window.
                type: number
                readOnly: true
                example: 2.5
              array_total_load:
                description: >-
                  The load percentage.
                  Average over the assessment window.
                type: number
                readOnly: true
                example: 0.23
              power_typical_spec:
                description: >-
                  The typical power consumption of the appliance in Watts.
                  The value is derived from benchmark data and remains static for
                  the model and configuration.
                type: number
                readOnly: true
                example: 500
              power_peak_spec:
                description: >-
                  The peak power consumption of the appliance in Watts.
                  The value is derived from benchmark data and remains static for
                  the model and configuration.
                type: number
                readOnly: true
                example: 600
              power_average:
                description: The average of power consumption of the appliance. Average
                  over the assessment window.
                type: number
                readOnly: true
                example: 524.25
              heat_typical_spec:
                description: >-
                  The typical heat production of the appliance in BTU/hr.
                  The value is derived from benchmark data and remains static for
                  the model and configuration.
                type: number
                readOnly: true
                example: 1705
              heat_peak_spec:
                description: >-
                  The peak heat production of the appliance in BTU/hr.
                  The value is derived from benchmark data and remains static for
                  the model and configuration.
                type: number
                readOnly: true
                example: 2046
              heat_average:
                description: The average of heat production of the appliance in BTU/Hr.
                  Average over the assessment window.
                type: number
                readOnly: true
                example: 1787.69
              power_per_used_space:
                description: The average of power consumption per TiB of used space.
                type: number
                readOnly: true
                example: 22.5
              power_per_usable_capacity:
                description: The average of power consumption per TiB of usable capacity.
                type: number
                readOnly: true
                example: 5.4
              assessment_level:
                description: >-
                  The assessment level of an appliance. Valid values include:
                  good - The assessment level of appliance is GOOD - all green.
                  recommendation - There are some actions
                    that can be done to bring appliance to a GOOD level.
                  action_required - The lowest level of assessment.
                    Some actions are required to improve the assessment level.
                type: string
                readOnly: true
                example: good
  SustainabilityInsightArray:
    description: >-
      A single FlashArray/FlashBlade appliance Sustainability assessment insights
      information.
      The _as_of is the time when the computation happened.
      Only the data from the given time interval was used for the computation of insight.
      Typically the last week of data is used for the computation of insights.
    allOf:
    - type: object
      properties:
        _as_of:
          description: The freshness of the data (timestamp in millis since epoch).
          type: integer
          readOnly: true
          format: int64
          example: 1502729489760
    - type: object
      properties:
        _interval_start:
          description: The timestamp of the start of the time interval.
          type: integer
          readOnly: true
          format: int64
          example: 1501519889760
        _interval_end:
          description: The timestamp of the end of the time interval.
          type: integer
          readOnly: true
          format: int64
          example: 1502729489760
    - properties:
        resource:
          allOf:
          - allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
        type:
          description: >-
            The type of the insight.
          readOnly: true
          type: string
          example: upgrade_purity_version_for_array_wide
        severity:
          description: >-
            The severity of the insight.
            Should be one of medium, high.
          readOnly: true
          type: string
          example: medium
        additional_data:
          description: >-
            The arbitrary data associated with the insight.
          readOnly: true
          type: object
          example:
            required_version: 6.3.0
  Tag:
    type: object
    properties:
      key:
        description: Key of the tag.
        type: string
        example: example_key
      namespace:
        description: >-
          Namespace of the tag.
          Namespace identifies the category of the tag.
        type: string
        example: pure1
      resource:
        type: object
        readOnly: true
        properties:
          id:
            description: The opaque and unique id of this resource.
            type: string
            example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
          name:
            description: The name of this resource.
            type: string
            example: example_name
          resource_type:
            description: >-
              The type of this resource represented by the name of its REST endpoint.
              For example, "arrays", "network-interfaces", and "metrics".
              The value may be `null` if the resource is not represented.
            type: string
            example: example_resource_type
      tag_organization_id:
        description: Org id of the tag.
        type: integer
        format: int64
        example: 101
      value:
        description: Value of the tag.
        type: string
        example: value123
  Target:
    allOf:
    - description: >-
        An external target system.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          address:
            type: string
            description: IP address or FQDN of the target system.
            example: example_name.dc1.example.com
          status:
            description: >-
              Status of the connection. Values include `connected` and `connecting`.
            readOnly: true
            type: string
            example: connected
          status_details:
            description: >-
              Additional information describing any issues encountered when
              connecting, or `null` if the `status` is `connected`.
            readOnly: true
            type: string
            example: null
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  Volume:
    allOf:
    - description: >-
        A disk-like random access virtual storage device that a FlashArray
        system exports to hosts via a logical unit number (LUN). For a host,
        a volume contains a number of 512-byte sectors in which data can be
        written and from which it can be read.
      allOf:
      - description: >-
          An ordinary (as opposed to built-in) resource that exists on one or
          multiple arrays and can be created, named, renamed or deleted by the
          user. This might be a virtual resource (e.g., a volume), or correspond
          to something in the environment, like a host or a server.
        allOf:
        - description: >-
            An ordinary (as opposed to built-in) resource that can be created, named,
            renamed, or deleted by the user. This might be a virtual resource (e.g.,
            a volume), or correspond to something in the physical environment, like
            a
            host or a server.
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
              name:
                description: A modifiable, locally unique name chosen by the user.
                type: string
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            readOnly: true
            example: 1502729489760
          destroyed:
            description: Whether this volume has been destroyed or not.
            type: boolean
            readOnly: true
            example: false
          eradicated:
            description: Whether this volume has been eradicated or not.
            type: boolean
            readOnly: true
            example: false
          pod:
            description: >-
              A reference to the pod this volume belongs to, if applicable.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          provisioned:
            description: Provisioned size of the volume in bytes.
            type: integer
            format: int64
            minimum: 1048576
            maximum: 4503599627370496
            example: 2048576
          serial:
            description: >-
              Serial number generated by Purity when the volume was created.
            type: string
            readOnly: true
            example: C68B5DCF2C1A4C9400012F92
          source:
            description: >-
              A reference to the volume this volume was cloned from, if applicable.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
  VolumeSnapshot:
    allOf:
    - description: >-
        A point-in-time image of the contents of a volume.
      allOf:
      - description: >-
          A built-in resource that exists on one or multiple arrays.
        allOf:
        - description: >-
            A built-in resource. Many are singletons predefined by Purity (e.g., support
            settings). Some correspond to a piece of software, like an app, or hardware,
            like a controller. Others are created by the system in response to some
            event
            (e.g., alerts, audit records).

            Typically, a user can't create, delete or rename a built-in resource.
            A few
            can be created or deleted, but not renamed because the names are meaningful
            to Purity (e.g., VIFs).
          allOf:
          - type: object
            properties:
              _as_of:
                description: The freshness of the data (timestamp in millis since
                  epoch).
                type: integer
                readOnly: true
                format: int64
                example: 1502729489760
          - readOnly: true
          - properties:
              id:
                description: A non-modifiable, globally unique ID chosen by the system.
                type: string
                readOnly: true
                example: 01c2889a-4124-49ff-8cbd-c33405ede123
              name:
                description: A non-modifiable, locally unique name chosen by the system.
                type: string
                readOnly: true
                example: example_name
        - type: object
          readOnly: true
          properties:
            arrays:
              description: >-
                The list of arrays where this resource exists. Many resources are
                on a single array, but
                some resources, such as pods, can be shared across multiple arrays.
              type: array
              items:
                type: object
                readOnly: true
                properties:
                  id:
                    description: The opaque and unique id of this resource.
                    type: string
                    example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                  name:
                    description: The name of this resource.
                    type: string
                    example: example_name
                  resource_type:
                    description: >-
                      The type of this resource represented by the name of its REST
                      endpoint.
                      For example, "arrays", "network-interfaces", and "metrics".
                      The value may be `null` if the resource is not represented.
                    type: string
                    example: example_resource_type
      - properties:
          created:
            description: Creation time in milliseconds since UNIX epoch.
            type: integer
            format: int64
            example: 1502729489760
          destroyed:
            description: >-
              Indicates if this snapshot has been destroyed and is pending
              eradication.
            type: boolean
            example: false
          on: # yamllint disable rule:truthy
            description: >-
              A reference to the array or the offload where the snapshot is stored.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          pod:
            description: >-
              A reference to the pod the source volume belongs to, if applicable.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          provisioned:
            description: >-
              Indicates the size (in bytes) of the volume when the snapshot was taken.
            type: integer
            format: int64
            example: 2048576
          serial:
            description: >-
              Serial number generated by Purity when the snapshot was created.
            type: string
            example: C68B5DCF2C1A4C9400012F92
          snapshot_group:
            description: >-
              A reference to a consistency group snapshot that this snapshot is
              part of.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          source:
            description: >-
              A reference to the volume that the snapshot was taken from.
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
          suffix:
            description: >-
              Suffix added to the source volume name used to generate the
              volume snapshot name.
            type: string
            example: checkpoint_2018_01_01
    - type: object
      readOnly: true
      properties:
        arrays:
          description: >-
            The list of arrays where this resource exists. Many resources are on a
            single array, but
            some resources, such as pods, can be shared across multiple arrays.
          type: array
          items:
            allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
    - properties: # `on` was defined in 1.0. Add fqdn property.
        on:
          allOf:
          - allOf:
            - type: object
              readOnly: true
              properties:
                id:
                  description: The opaque and unique id of this resource.
                  type: string
                  example: 2a989a09-c851-4d52-9ec6-ab728b1c04db
                name:
                  description: The name of this resource.
                  type: string
                  example: example_name
                resource_type:
                  description: >-
                    The type of this resource represented by the name of its REST
                    endpoint.
                    For example, "arrays", "network-interfaces", and "metrics".
                    The value may be `null` if the resource is not represented.
                  type: string
                  example: example_resource_type
            - properties:
                fqdn:
                  description: >-
                    The fully qualified domain name of the appliance when `resource_type`
                    is `arrays`,
                    `null` otherwise.
                  readOnly: true
                  type: string
                  example: example_name.dc1.example.com
